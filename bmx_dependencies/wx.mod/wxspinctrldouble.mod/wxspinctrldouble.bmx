' Copyright (c) 2007-2018 Bruce A Henderson
' 
' Permission is hereby granted, free of charge, to any person obtaining a copy
' of this software and associated documentation files (the "Software"), to deal
' in the Software without restriction, including without limitation the rights
' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
' copies of the Software, and to permit persons to whom the Software is
' furnished to do so, subject to the following conditions:
' 
' The above copyright notice and this permission notice shall be included in
' all copies or substantial portions of the Software.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
' THE SOFTWARE.
' 
SuperStrict

Rem
bbdoc: wxSpinCtrlDouble
End Rem
Module wx.wxSpinCtrlDouble

ModuleInfo "Version: 1.00"
ModuleInfo "License: MIT"
ModuleInfo "Author: Bruce A Henderson"
ModuleInfo "Copyright: (c) 2007-2018 Bruce A Henderson"


?linux
ModuleInfo "CC_OPTS: -D__WXGTK__"
ModuleInfo "CC_OPTS: -D_FILE_OFFSET_BITS=64"
ModuleInfo "CC_OPTS: -D_LARGE_FILES"
ModuleInfo "CC_OPTS: -DWX_PRECOMP"
?win32
ModuleInfo "CC_OPTS: -DHAVE_W32API_H"
ModuleInfo "CC_OPTS: -D__WXMSW__"
ModuleInfo "CC_OPTS: -D_UNICODE"
ModuleInfo "CC_OPTS: -DUNICODE"
?macos
ModuleInfo "CC_OPTS: -D__WXOSX_COCOA__"
ModuleInfo "CC_OPTS: -D_FILE_OFFSET_BITS=64"
ModuleInfo "CC_OPTS: -D_LARGE_FILES"
ModuleInfo "CC_OPTS: -DWX_PRECOMP"
?

Import "common.bmx"

Rem
bbdoc: Combines wxTextCtrl and wxSpinButton in one control and displays a real number.
End Rem
Type wxSpinCtrlDouble Extends wxControl

	Function CreateSpinCtrl:wxSpinCtrlDouble(parent:wxWindow, id:Int, value:String = Null, x:Int = -1, y:Int = -1, ..
			w:Int = -1, h:Int = -1, style:Int = wxSP_ARROW_KEYS, minimum:Double = 0, maximum:Double = 100, initial:Double = 0)
			
		Return New wxSpinCtrlDouble.Create(parent, id, value, x, y, w, h, style, minimum, maximum, initial)

	End Function
	
	Rem
	bbdoc: Creation method, for two-step construction. For details see CreateButton.
	End Rem
	Method Create:wxSpinCtrlDouble(parent:wxWindow, id:Int, value:String = Null, x:Int = -1, y:Int = -1, ..
			w:Int = -1, h:Int = -1, style:Int = wxSP_ARROW_KEYS, minimum:Double = 0, maximum:Double = 100, initial:Double = 0)
			
		wxObjectPtr = bmx_wxspinctrldouble_create(Self, parent.wxObjectPtr, id, value, x, y, w, h, style, minimum, maximum, initial)
		
		Return Self
	End Method

	Rem
	bbdoc: Sets the value of the spin control.
	End Rem
	Method SetValue(value:Double)
		bmx_wxspinctrldouble_setvalue(wxObjectPtr, value)
	End Method
	
	Rem
	bbdoc: Sets the value of the spin control.
	End Rem
	Method SetTextValue(value:String)
		bmx_wxspinctrldouble_settextvalue(wxObjectPtr, value)
	End Method
	
	Rem
	bbdoc: Sets range of allowable values.
	End Rem
	Method SetRange( minVal:Double, maxVal:Double)
		bmx_wxspinctrldouble_setrange(wxObjectPtr, minVal, maxVal)
	End Method
	
	Rem
	bbdoc: Sets the increment value.
	End Rem
	Method SetIncrement(increment:Double)
		bmx_wxspinctrldouble_setincrement(wxObjectPtr, increment)
	End Method
	
	Rem
	bbdoc: Sets the number of digits in the display.
	End Rem
	Method SetDigits(digits:Int) 
		bmx_wxspinctrldouble_setdigits(wxObjectPtr, digits)
	End Method
	
	Rem
	bbdoc: Gets the value of the spin control.
	End Rem
	Method GetValue:Double()
		Return bmx_wxspinctrldouble_getvalue(wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Gets minimal allowable value.
	End Rem
	Method GetMin:Double()
		Return bmx_wxspinctrldouble_getmin(wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Gets maximal allowable value.
	End Rem
	Method GetMax:Double()
		Return bmx_wxspinctrldouble_getmax(wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Gets the increment value.
	End Rem
	Method GetIncrement:Double()
		Return bmx_wxspinctrldouble_getincrement(wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Gets the number of digits in the display.
	End Rem
	Method GetDigits:Int()
		Return bmx_wxspinctrldouble_getdigits(wxObjectPtr)
	End Method
	
End Type

Rem
bbdoc: This event class is used for the events generated by wxSpinCtrlDouble.
End Rem
Type wxSpinDoubleEvent Extends wxNotifyEvent

	Function Create:wxEvent(wxEventPtr:Byte Ptr, evt:TEventHandler)
		Local this:wxSpinDoubleEvent = New wxSpinDoubleEvent
		
		this.init(wxEventPtr, evt)
		
		Return this
	End Function

	Rem
	bbdoc: Returns the value associated with this spin control event.
	End Rem
	Method GetValue:Double()
		Return bmx_wxspindoubleevent_getvalue(wxEventPtr)
	End Method
	
	Rem
	bbdoc: Sets the value associated with the event. 
	End Rem
	Method SetValue(value:Double)
		bmx_wxspindoubleevent_setvalue(wxEventPtr, value)
	End Method
	
End Type

Type TSpinCtrlDoubleEventFactory Extends TEventFactory

	Method CreateEvent:wxEvent(wxEventPtr:Byte Ptr, evt:TEventHandler)
	
		If evt.eventType = wxEVT_COMMAND_SPINCTRLDOUBLE Then
			Return wxSpinDoubleEvent.Create(wxEventPtr, evt)
		End If
		
		Return Null
	End Method

	Method GetEventType:Int(eventType:Int)
		If eventType = wxEVT_COMMAND_SPINCTRLDOUBLE Then
			Return bmx_wxspinctrldouble_geteventtype(eventType)
		End If
	End Method
		
End Type

New TSpinCtrlDoubleEventFactory
