' Copyright (c) 2007-2018 Bruce A Henderson
' 
' Permission is hereby granted, free of charge, to any person obtaining a copy
' of this software and associated documentation files (the "Software"), to deal
' in the Software without restriction, including without limitation the rights
' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
' copies of the Software, and to permit persons to whom the Software is
' furnished to do so, subject to the following conditions:
' 
' The above copyright notice and this permission notice shall be included in
' all copies or substantial portions of the Software.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
' THE SOFTWARE.
' 
SuperStrict

Rem
bbdoc: wxScintilla
End Rem
Module wx.wxScintilla

ModuleInfo "Version: 1.00"
ModuleInfo "License: MIT"
ModuleInfo "Author: Bruce A Henderson"
ModuleInfo "Copyright: (c) 2007-2018 Bruce A Henderson"


?linux
ModuleInfo "CC_OPTS: -D__WXGTK__"
ModuleInfo "CC_OPTS: -D_FILE_OFFSET_BITS=64"
ModuleInfo "CC_OPTS: -D_LARGE_FILES"
ModuleInfo "CC_OPTS: -DWX_PRECOMP"
ModuleInfo "CC_OPTS: -D__WX__ -DSCI_LEXER"
?win32
ModuleInfo "CC_OPTS: -DHAVE_W32API_H"
ModuleInfo "CC_OPTS: -D__WXMSW__"
ModuleInfo "CC_OPTS: -D_UNICODE"
ModuleInfo "CC_OPTS: -DUNICODE"
ModuleInfo "CC_OPTS: -DSCI_LEXER -DSTATIC_BUILD -D__WX__"
?macos
ModuleInfo "CC_OPTS: -D__WXOSX_COCOA__"
ModuleInfo "CC_OPTS: -D_FILE_OFFSET_BITS=64"
ModuleInfo "CC_OPTS: -D_LARGE_FILES"
ModuleInfo "CC_OPTS: -DWX_PRECOMP"
ModuleInfo "CC_OPTS: -DMACOSX -D__WX__ -DSCI_LEXER"
?

Import "common.bmx"

'
' NOTE : when updating wxWidgets, the same version of scintilla source needs to be copied here
'  for the Max lexer to build correctly.
'

bmx_init_scintilla_modules()

Rem
bbdoc: 
End Rem
Type wxScintilla Extends wxControl

	Rem
	bbdoc: 
	End Rem
	Function CreateScintilla:wxScintilla(parent:wxWindow, id:Int = wxID_ANY, x:Int = -1, y:Int = -1, w:Int = -1, ..
			h:Int = -1, style:Int = 0)
		Return New wxScintilla.Create(parent, id, x, y, w, h, style)
	End Function
	
	Rem
	bbdoc: 
	End Rem
	Method Create:wxScintilla(parent:wxWindow, id:Int = wxID_ANY, x:Int = -1, y:Int = -1, w:Int = -1, ..
			h:Int = -1, style:Int = 0)
		wxObjectPtr = bmx_wxscintilla_create(Self, parent.wxObjectPtr, id, x, y, w, h, style)
		OnInit()
		Return Self
	End Method
	
	' The following code is generated... do not hand-edit this. You have been warned :-)
	' //++Autogenerated
	Rem
	bbdoc: Add text to the document at current position.
	End Rem
	Method AddText(Text:String)
		bmx_wxscintilla_addtext(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Insert string at a position.
	End Rem
	Method InsertText(pos:Int, Text:String)
		bmx_wxscintilla_inserttext(wxObjectPtr, pos, Text)
	End Method

	Rem
	bbdoc: Delete all text in the document.
	End Rem
	Method ClearAll()
		bmx_wxscintilla_clearall(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete a range of text in the document.
	End Rem
	Method DeleteRange(pos:Int, deleteLength:Int)
		bmx_wxscintilla_deleterange(wxObjectPtr, pos, deleteLength)
	End Method

	Rem
	bbdoc: Set all style bytes to 0, remove all folding information.
	End Rem
	Method ClearDocumentStyle()
		bmx_wxscintilla_cleardocumentstyle(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the number of bytes in the document.
	End Rem
	Method GetLength:Int()
		Return bmx_wxscintilla_getlength(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the character byte at the position.
	End Rem
	Method GetCharAt:Int(pos:Int)
		Return bmx_wxscintilla_getcharat(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Returns the position of the caret.
	End Rem
	Method GetCurrentPos:Int()
		Return bmx_wxscintilla_getcurrentpos(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the position of the opposite end of the selection to the caret.
	End Rem
	Method GetAnchor:Int()
		Return bmx_wxscintilla_getanchor(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the style byte at the position.
	End Rem
	Method GetStyleAt:Int(pos:Int)
		Return bmx_wxscintilla_getstyleat(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Redoes the next action on the undo history.
	End Rem
	Method Redo()
		bmx_wxscintilla_redo(wxObjectPtr)
	End Method

	Rem
	bbdoc: Choose between collecting actions into the undo
	about: history and discarding them.
	End Rem
	Method SetUndoCollection(collectUndo:Int)
		bmx_wxscintilla_setundocollection(wxObjectPtr, collectUndo)
	End Method

	Rem
	bbdoc: Select all the text in the document.
	End Rem
	Method SelectAll()
		bmx_wxscintilla_selectall(wxObjectPtr)
	End Method

	Rem
	bbdoc: Remember the current position in the undo history as the position
	about: at which the document was saved.
	End Rem
	Method SetSavePoint()
		bmx_wxscintilla_setsavepoint(wxObjectPtr)
	End Method

	Rem
	bbdoc: Are there any redoable actions in the undo history?
	End Rem
	Method CanRedo:Int()
		Return bmx_wxscintilla_canredo(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the line number at which a particular marker is located.
	End Rem
	Method MarkerLineFromHandle:Int(handle_:Int)
		Return bmx_wxscintilla_markerlinefromhandle(wxObjectPtr, handle_)
	End Method

	Rem
	bbdoc: Delete a marker.
	End Rem
	Method MarkerDeleteHandle(handle_:Int)
		bmx_wxscintilla_markerdeletehandle(wxObjectPtr, handle_)
	End Method

	Rem
	bbdoc: Is undo history being collected?
	End Rem
	Method GetUndoCollection:Int()
		Return bmx_wxscintilla_getundocollection(wxObjectPtr)
	End Method

	Rem
	bbdoc: Are white space characters currently visible?
	about: Returns one of SCWS_* constants.
	End Rem
	Method GetViewWhiteSpace:Int()
		Return bmx_wxscintilla_getviewwhitespace(wxObjectPtr)
	End Method

	Rem
	bbdoc: Make white space characters invisible, always visible or visible outside indentation.
	End Rem
	Method SetViewWhiteSpace(viewWS:Int)
		bmx_wxscintilla_setviewwhitespace(wxObjectPtr, viewWS)
	End Method

	Rem
	bbdoc: Find the position from a point within the window.
	End Rem
	Method PositionFromPoint:Int(x:Int, y:Int)
		Return bmx_wxscintilla_positionfrompoint(wxObjectPtr, x, y)
	End Method

	Rem
	bbdoc: Find the position from a point within the window but return
	about: INVALID_POSITION if not close to text.
	End Rem
	Method PositionFromPointClose:Int(x:Int, y:Int)
		Return bmx_wxscintilla_positionfrompointclose(wxObjectPtr, x, y)
	End Method

	Rem
	bbdoc: Set caret to start of a line and ensure it is visible.
	End Rem
	Method GotoLine(line:Int)
		bmx_wxscintilla_gotoline(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set caret to a position and ensure it is visible.
	End Rem
	Method GotoPos(pos:Int)
		bmx_wxscintilla_gotopos(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Set the selection anchor to a position. The anchor is the opposite
	about: end of the selection from the caret.
	End Rem
	Method SetAnchor(posAnchor:Int)
		bmx_wxscintilla_setanchor(wxObjectPtr, posAnchor)
	End Method

	Rem
	bbdoc: Retrieve the text of the line containing the caret.
	about: Returns the index of the caret on the line.
	End Rem
	Method GetCurLine:String(index:Int Var)
		Return bmx_wxscintilla_getcurline(wxObjectPtr, Varptr index)
	End Method

	Rem
	bbdoc: Retrieve the position of the last correctly styled character.
	End Rem
	Method GetEndStyled:Int()
		Return bmx_wxscintilla_getendstyled(wxObjectPtr)
	End Method

	Rem
	bbdoc: Convert all line endings in the document to one mode.
	End Rem
	Method ConvertEOLs(eolMode:Int)
		bmx_wxscintilla_converteols(wxObjectPtr, eolMode)
	End Method

	Rem
	bbdoc: Retrieve the current end of line mode - one of CRLF, CR, or LF.
	End Rem
	Method GetEOLMode:Int()
		Return bmx_wxscintilla_geteolmode(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the current end of line mode.
	End Rem
	Method SetEOLMode(eolMode:Int)
		bmx_wxscintilla_seteolmode(wxObjectPtr, eolMode)
	End Method

	Rem
	bbdoc: Set the current styling position to pos and the styling mask to mask.
	about: The styling mask can be used to protect some bits in each styling byte from modification.
	End Rem
	Method StartStyling(pos:Int, mask:Int)
		bmx_wxscintilla_startstyling(wxObjectPtr, pos, mask)
	End Method

	Rem
	bbdoc: Change style from current styling position for length characters to a style
	about: and move the current styling position to after this newly styled segment.
	End Rem
	Method SetStyling(length:Int, style:Int)
		bmx_wxscintilla_setstyling(wxObjectPtr, length, style)
	End Method

	Rem
	bbdoc: Is drawing done first into a buffer or direct to the screen?
	End Rem
	Method GetBufferedDraw:Int()
		Return bmx_wxscintilla_getbuffereddraw(wxObjectPtr)
	End Method

	Rem
	bbdoc: If drawing is buffered then each line of text is drawn into a bitmap buffer
	about: before drawing it to the screen to avoid flicker.
	End Rem
	Method SetBufferedDraw(buffered:Int)
		bmx_wxscintilla_setbuffereddraw(wxObjectPtr, buffered)
	End Method

	Rem
	bbdoc: Change the visible size of a tab to be a multiple of the width of a space character.
	End Rem
	Method SetTabWidth(tabWidth:Int)
		bmx_wxscintilla_settabwidth(wxObjectPtr, tabWidth)
	End Method

	Rem
	bbdoc: Retrieve the visible size of a tab.
	End Rem
	Method GetTabWidth:Int()
		Return bmx_wxscintilla_gettabwidth(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the code page used to interpret the bytes of the document as characters.
	about: The SC_CP_UTF8 value can be used to enter Unicode mode.
	End Rem
	Method SetCodePage(codePage:Int)
		bmx_wxscintilla_setcodepage(wxObjectPtr, codePage)
	End Method

	Rem
	bbdoc: Set the symbol used for a particular marker number.
	End Rem
	Method MarkerDefine(markerNumber:Int, markerSymbol:Int)
		bmx_wxscintilla_markerdefine(wxObjectPtr, markerNumber, markerSymbol)
	End Method

	Rem
	bbdoc: Set the foreground colour used for a particular marker number.
	End Rem
	Method MarkerSetForeground(markerNumber:Int, fore:wxColour)
		bmx_wxscintilla_markersetforeground(wxObjectPtr, markerNumber, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the background colour used for a particular marker number.
	End Rem
	Method MarkerSetBackground(markerNumber:Int, back:wxColour)
		bmx_wxscintilla_markersetbackground(wxObjectPtr, markerNumber, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the background colour used for a particular marker number when its folding block is selected.
	End Rem
	Method MarkerSetBackgroundSelected(markerNumber:Int, back:wxColour)
		bmx_wxscintilla_markersetbackgroundselected(wxObjectPtr, markerNumber, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Enable/disable highlight for current folding bloc (smallest one that contains the caret)
	End Rem
	Method MarkerEnableHighlight(enabled:Int)
		bmx_wxscintilla_markerenablehighlight(wxObjectPtr, enabled)
	End Method

	Rem
	bbdoc: Add a marker to a line, returning an ID which can be used to find or delete the marker.
	End Rem
	Method MarkerAdd:Int(line:Int, markerNumber:Int)
		Return bmx_wxscintilla_markeradd(wxObjectPtr, line, markerNumber)
	End Method

	Rem
	bbdoc: Delete a marker from a line.
	End Rem
	Method MarkerDelete(line:Int, markerNumber:Int)
		bmx_wxscintilla_markerdelete(wxObjectPtr, line, markerNumber)
	End Method

	Rem
	bbdoc: Delete all markers with a particular number from all lines.
	End Rem
	Method MarkerDeleteAll(markerNumber:Int)
		bmx_wxscintilla_markerdeleteall(wxObjectPtr, markerNumber)
	End Method

	Rem
	bbdoc: Get a bit mask of all the markers set on a line.
	End Rem
	Method MarkerGet:Int(line:Int)
		Return bmx_wxscintilla_markerget(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Find the next line at or after lineStart that includes a marker in mask.
	about: Return -1 when no more lines.
	End Rem
	Method MarkerNext:Int(lineStart:Int, markerMask:Int)
		Return bmx_wxscintilla_markernext(wxObjectPtr, lineStart, markerMask)
	End Method

	Rem
	bbdoc: Find the previous line before lineStart that includes a marker in mask.
	End Rem
	Method MarkerPrevious:Int(lineStart:Int, markerMask:Int)
		Return bmx_wxscintilla_markerprevious(wxObjectPtr, lineStart, markerMask)
	End Method

	Rem
	bbdoc: Define a marker from a pixmap.
	End Rem
	Method MarkerDefineBitmap(markerNumber:Int, bitmap:wxBitmap)
		bmx_wxscintilla_markerdefinebitmap(wxObjectPtr, markerNumber, bitmap.wxObjectPtr)
	End Method

	Rem
	bbdoc: Add a set of markers to a line.
	End Rem
	Method MarkerAddSet(line:Int, set:Int)
		bmx_wxscintilla_markeraddset(wxObjectPtr, line, set)
	End Method

	Rem
	bbdoc: Set the alpha used for a marker that is drawn in the text area, not the margin.
	End Rem
	Method MarkerSetAlpha(markerNumber:Int, alpha:Int)
		bmx_wxscintilla_markersetalpha(wxObjectPtr, markerNumber, alpha)
	End Method

	Rem
	bbdoc: Set a margin to be either numeric or symbolic.
	End Rem
	Method SetMarginType(margin:Int, marginType:Int)
		bmx_wxscintilla_setmargintype(wxObjectPtr, margin, marginType)
	End Method

	Rem
	bbdoc: Retrieve the type of a margin.
	End Rem
	Method GetMarginType:Int(margin:Int)
		Return bmx_wxscintilla_getmargintype(wxObjectPtr, margin)
	End Method

	Rem
	bbdoc: Set the width of a margin to a width expressed in pixels.
	End Rem
	Method SetMarginWidth(margin:Int, pixelWidth:Int)
		bmx_wxscintilla_setmarginwidth(wxObjectPtr, margin, pixelWidth)
	End Method

	Rem
	bbdoc: Retrieve the width of a margin in pixels.
	End Rem
	Method GetMarginWidth:Int(margin:Int)
		Return bmx_wxscintilla_getmarginwidth(wxObjectPtr, margin)
	End Method

	Rem
	bbdoc: Set a mask that determines which markers are displayed in a margin.
	End Rem
	Method SetMarginMask(margin:Int, mask:Int)
		bmx_wxscintilla_setmarginmask(wxObjectPtr, margin, mask)
	End Method

	Rem
	bbdoc: Retrieve the marker mask of a margin.
	End Rem
	Method GetMarginMask:Int(margin:Int)
		Return bmx_wxscintilla_getmarginmask(wxObjectPtr, margin)
	End Method

	Rem
	bbdoc: Make a margin sensitive or insensitive to mouse clicks.
	End Rem
	Method SetMarginSensitive(margin:Int, sensitive:Int)
		bmx_wxscintilla_setmarginsensitive(wxObjectPtr, margin, sensitive)
	End Method

	Rem
	bbdoc: Retrieve the mouse click sensitivity of a margin.
	End Rem
	Method GetMarginSensitive:Int(margin:Int)
		Return bmx_wxscintilla_getmarginsensitive(wxObjectPtr, margin)
	End Method

	Rem
	bbdoc: Set the cursor shown when the mouse is inside a margin.
	End Rem
	Method SetMarginCursor(margin:Int, cursor:Int)
		bmx_wxscintilla_setmargincursor(wxObjectPtr, margin, cursor)
	End Method

	Rem
	bbdoc: Retrieve the cursor shown in a margin.
	End Rem
	Method GetMarginCursor:Int(margin:Int)
		Return bmx_wxscintilla_getmargincursor(wxObjectPtr, margin)
	End Method

	Rem
	bbdoc: Clear all the styles and make equivalent to the global default style.
	End Rem
	Method StyleClearAll()
		bmx_wxscintilla_styleclearall(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the foreground colour of a style.
	End Rem
	Method StyleSetForeground(style:Int, fore:wxColour)
		bmx_wxscintilla_stylesetforeground(wxObjectPtr, style, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the background colour of a style.
	End Rem
	Method StyleSetBackground(style:Int, back:wxColour)
		bmx_wxscintilla_stylesetbackground(wxObjectPtr, style, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set a style to be bold or not.
	End Rem
	Method StyleSetBold(style:Int, bold:Int)
		bmx_wxscintilla_stylesetbold(wxObjectPtr, style, bold)
	End Method

	Rem
	bbdoc: Set a style to be italic or not.
	End Rem
	Method StyleSetItalic(style:Int, italic:Int)
		bmx_wxscintilla_stylesetitalic(wxObjectPtr, style, italic)
	End Method

	Rem
	bbdoc: Set the size of characters of a style.
	End Rem
	Method StyleSetSize(style:Int, sizePoints:Int)
		bmx_wxscintilla_stylesetsize(wxObjectPtr, style, sizePoints)
	End Method

	Rem
	bbdoc: Set the font of a style.
	End Rem
	Method StyleSetFaceName(style:Int, FontName:String)
		bmx_wxscintilla_stylesetfacename(wxObjectPtr, style, FontName)
	End Method

	Rem
	bbdoc: Set a style to have its end of line filled or not.
	End Rem
	Method StyleSetEOLFilled(style:Int, filled:Int)
		bmx_wxscintilla_styleseteolfilled(wxObjectPtr, style, filled)
	End Method

	Rem
	bbdoc: Reset the default style to its state at startup
	End Rem
	Method StyleResetDefault()
		bmx_wxscintilla_styleresetdefault(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set a style to be underlined or not.
	End Rem
	Method StyleSetUnderline(style:Int, underline:Int)
		bmx_wxscintilla_stylesetunderline(wxObjectPtr, style, underline)
	End Method

	Rem
	bbdoc: Get the foreground colour of a style.
	End Rem
	Method StyleGetForeground:wxColour(style:Int)
		Return wxColour._create(bmx_wxscintilla_stylegetforeground(wxObjectPtr, style))
	End Method

	Rem
	bbdoc: Get the background colour of a style.
	End Rem
	Method StyleGetBackground:wxColour(style:Int)
		Return wxColour._create(bmx_wxscintilla_stylegetbackground(wxObjectPtr, style))
	End Method

	Rem
	bbdoc: Get is a style bold or not.
	End Rem
	Method StyleGetBold:Int(style:Int)
		Return bmx_wxscintilla_stylegetbold(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style italic or not.
	End Rem
	Method StyleGetItalic:Int(style:Int)
		Return bmx_wxscintilla_stylegetitalic(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get the size of characters of a style.
	End Rem
	Method StyleGetSize:Int(style:Int)
		Return bmx_wxscintilla_stylegetsize(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get the font of a style.
	about: Returns the length of the fontName
	End Rem
	Method StyleGetFaceName:String(style:Int)
		Return bmx_wxscintilla_stylegetfacename(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style to have its end of line filled or not.
	End Rem
	Method StyleGetEOLFilled:Int(style:Int)
		Return bmx_wxscintilla_stylegeteolfilled(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style underlined or not.
	End Rem
	Method StyleGetUnderline:Int(style:Int)
		Return bmx_wxscintilla_stylegetunderline(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style mixed case, or to force upper or lower case.
	End Rem
	Method StyleGetCase:Int(style:Int)
		Return bmx_wxscintilla_stylegetcase(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style visible or not.
	End Rem
	Method StyleGetVisible:Int(style:Int)
		Return bmx_wxscintilla_stylegetvisible(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style changeable or not (read only).
	about: Experimental feature, currently buggy.
	End Rem
	Method StyleGetChangeable:Int(style:Int)
		Return bmx_wxscintilla_stylegetchangeable(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get is a style a hotspot or not.
	End Rem
	Method StyleGetHotSpot:Int(style:Int)
		Return bmx_wxscintilla_stylegethotspot(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Set a style to be mixed case, or to force upper or lower case.
	End Rem
	Method StyleSetCase(style:Int, caseForce:Int)
		bmx_wxscintilla_stylesetcase(wxObjectPtr, style, caseForce)
	End Method

	Rem
	bbdoc: Set the size of characters of a style. Size is in points multiplied by 100.
	End Rem
	Method StyleSetSizeFractional(style:Int, caseForce:Int)
		bmx_wxscintilla_stylesetsizefractional(wxObjectPtr, style, caseForce)
	End Method

	Rem
	bbdoc: Get the size of characters of a style in points multiplied by 100
	End Rem
	Method StyleGetSizeFractional:Int(style:Int)
		Return bmx_wxscintilla_stylegetsizefractional(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Set the weight of characters of a style.
	End Rem
	Method StyleSetWeight(style:Int, weight:Int)
		bmx_wxscintilla_stylesetweight(wxObjectPtr, style, weight)
	End Method

	Rem
	bbdoc: Get the weight of characters of a style.
	End Rem
	Method StyleGetWeight:Int(style:Int)
		Return bmx_wxscintilla_stylegetweight(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Set the character set of the font in a style.
	End Rem
	Method StyleSetCharacterSet(style:Int, characterSet:Int)
		bmx_wxscintilla_stylesetcharacterset(wxObjectPtr, style, characterSet)
	End Method

	Rem
	bbdoc: Set a style to be a hotspot or not.
	End Rem
	Method StyleSetHotSpot(style:Int, hotspot:Int)
		bmx_wxscintilla_stylesethotspot(wxObjectPtr, style, hotspot)
	End Method

	Rem
	bbdoc: Set the foreground colour of the main and additional selections and whether to use this setting.
	End Rem
	Method SetSelForeground(useSetting:Int, fore:wxColour)
		bmx_wxscintilla_setselforeground(wxObjectPtr, useSetting, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the background colour of the main and additional selections and whether to use this setting.
	End Rem
	Method SetSelBackground(useSetting:Int, back:wxColour)
		bmx_wxscintilla_setselbackground(wxObjectPtr, useSetting, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the alpha of the selection.
	End Rem
	Method GetSelAlpha:Int()
		Return bmx_wxscintilla_getselalpha(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the alpha of the selection.
	End Rem
	Method SetSelAlpha(alpha:Int)
		bmx_wxscintilla_setselalpha(wxObjectPtr, alpha)
	End Method

	Rem
	bbdoc: Is the selection end of line filled?
	End Rem
	Method GetSelEOLFilled:Int()
		Return bmx_wxscintilla_getseleolfilled(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the selection to have its end of line filled or not.
	End Rem
	Method SetSelEOLFilled(filled:Int)
		bmx_wxscintilla_setseleolfilled(wxObjectPtr, filled)
	End Method

	Rem
	bbdoc: Set the foreground colour of the caret.
	End Rem
	Method SetCaretForeground(fore:wxColour)
		bmx_wxscintilla_setcaretforeground(wxObjectPtr, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Drop all key mappings.
	End Rem
	Method CmdKeyClearAll()
		bmx_wxscintilla_cmdkeyclearall(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set a style to be visible or not.
	End Rem
	Method StyleSetVisible(style:Int, visible:Int)
		bmx_wxscintilla_stylesetvisible(wxObjectPtr, style, visible)
	End Method

	Rem
	bbdoc: Get the time in milliseconds that the caret is on and off.
	End Rem
	Method GetCaretPeriod:Int()
		Return bmx_wxscintilla_getcaretperiod(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the time in milliseconds that the caret is on and off. 0 = steady on.
	End Rem
	Method SetCaretPeriod(periodMilliseconds:Int)
		bmx_wxscintilla_setcaretperiod(wxObjectPtr, periodMilliseconds)
	End Method

	Rem
	bbdoc: Set the set of characters making up words for when moving or selecting by word.
	about: First sets defaults like SetCharsDefault.
	End Rem
	Method SetWordChars(characters:String)
		bmx_wxscintilla_setwordchars(wxObjectPtr, characters)
	End Method

	Rem
	bbdoc: Get the set of characters making up words for when moving or selecting by word.
	about: Retuns the number of characters
	End Rem
	Method GetWordChars:String()
		Return bmx_wxscintilla_getwordchars(wxObjectPtr)
	End Method

	Rem
	bbdoc: Start a sequence of actions that is undone and redone as a unit.
	about: May be nested.
	End Rem
	Method BeginUndoAction()
		bmx_wxscintilla_beginundoaction(wxObjectPtr)
	End Method

	Rem
	bbdoc: End a sequence of actions that is undone and redone as a unit.
	End Rem
	Method EndUndoAction()
		bmx_wxscintilla_endundoaction(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set an indicator to plain, squiggle or TT.
	End Rem
	Method IndicatorSetStyle(indic:Int, style:Int)
		bmx_wxscintilla_indicatorsetstyle(wxObjectPtr, indic, style)
	End Method

	Rem
	bbdoc: Retrieve the style of an indicator.
	End Rem
	Method IndicatorGetStyle:Int(indic:Int)
		Return bmx_wxscintilla_indicatorgetstyle(wxObjectPtr, indic)
	End Method

	Rem
	bbdoc: Set the foreground colour of an indicator.
	End Rem
	Method IndicatorSetForeground(indic:Int, fore:wxColour)
		bmx_wxscintilla_indicatorsetforeground(wxObjectPtr, indic, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the foreground colour of an indicator.
	End Rem
	Method IndicatorGetForeground:wxColour(indic:Int)
		Return wxColour._create(bmx_wxscintilla_indicatorgetforeground(wxObjectPtr, indic))
	End Method

	Rem
	bbdoc: Set the foreground colour of all whitespace and whether to use this setting.
	End Rem
	Method SetWhitespaceForeground(useSetting:Int, fore:wxColour)
		bmx_wxscintilla_setwhitespaceforeground(wxObjectPtr, useSetting, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the background colour of all whitespace and whether to use this setting.
	End Rem
	Method SetWhitespaceBackground(useSetting:Int, back:wxColour)
		bmx_wxscintilla_setwhitespacebackground(wxObjectPtr, useSetting, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the size of the dots used to mark space characters.
	End Rem
	Method SetWhitespaceSize(size:Int)
		bmx_wxscintilla_setwhitespacesize(wxObjectPtr, size)
	End Method

	Rem
	bbdoc: Get the size of the dots used to mark space characters.
	End Rem
	Method GetWhitespaceSize:Int()
		Return bmx_wxscintilla_getwhitespacesize(wxObjectPtr)
	End Method

	Rem
	bbdoc: Divide each styling byte into lexical class bits (default: 5) and indicator
	about: bits (default: 3). If a lexer requires more than 32 lexical states, then this
	is used to expand the possible states.
	End Rem
	Method SetStyleBits(bits:Int)
		bmx_wxscintilla_setstylebits(wxObjectPtr, bits)
	End Method

	Rem
	bbdoc: Retrieve number of bits in style bytes used to hold the lexical state.
	End Rem
	Method GetStyleBits:Int()
		Return bmx_wxscintilla_getstylebits(wxObjectPtr)
	End Method

	Rem
	bbdoc: Used to hold extra styling information for each line.
	End Rem
	Method SetLineState(line:Int, state:Int)
		bmx_wxscintilla_setlinestate(wxObjectPtr, line, state)
	End Method

	Rem
	bbdoc: Retrieve the extra styling information for a line.
	End Rem
	Method GetLineState:Int(line:Int)
		Return bmx_wxscintilla_getlinestate(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Retrieve the last line number that has line state.
	End Rem
	Method GetMaxLineState:Int()
		Return bmx_wxscintilla_getmaxlinestate(wxObjectPtr)
	End Method

	Rem
	bbdoc: Is the background of the line containing the caret in a different colour?
	End Rem
	Method GetCaretLineVisible:Int()
		Return bmx_wxscintilla_getcaretlinevisible(wxObjectPtr)
	End Method

	Rem
	bbdoc: Display the background of the line containing the caret in a different colour.
	End Rem
	Method SetCaretLineVisible(show:Int)
		bmx_wxscintilla_setcaretlinevisible(wxObjectPtr, show)
	End Method

	Rem
	bbdoc: Get the colour of the background of the line containing the caret.
	End Rem
	Method GetCaretLineBackground:wxColour()
		Return wxColour._create(bmx_wxscintilla_getcaretlinebackground(wxObjectPtr))
	End Method

	Rem
	bbdoc: Set the colour of the background of the line containing the caret.
	End Rem
	Method SetCaretLineBackground(back:wxColour)
		bmx_wxscintilla_setcaretlinebackground(wxObjectPtr, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set a style to be changeable or not (read only).
	about: Experimental feature, currently buggy.
	End Rem
	Method StyleSetChangeable(style:Int, changeable:Int)
		bmx_wxscintilla_stylesetchangeable(wxObjectPtr, style, changeable)
	End Method

	Rem
	bbdoc: Display a auto-completion list.
	about: The lenEntered parameter indicates how many characters before
	the caret should be used to provide context.
	End Rem
	Method AutoCompShow(lenEntered:Int, itemList:String)
		bmx_wxscintilla_autocompshow(wxObjectPtr, lenEntered, itemList)
	End Method

	Rem
	bbdoc: Remove the auto-completion list from the screen.
	End Rem
	Method AutoCompCancel()
		bmx_wxscintilla_autocompcancel(wxObjectPtr)
	End Method

	Rem
	bbdoc: Is there an auto-completion list visible?
	End Rem
	Method AutoCompActive:Int()
		Return bmx_wxscintilla_autocompactive(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the position of the caret when the auto-completion list was displayed.
	End Rem
	Method AutoCompPosStart:Int()
		Return bmx_wxscintilla_autocompposstart(wxObjectPtr)
	End Method

	Rem
	bbdoc: User has selected an item so remove the list and insert the selection.
	End Rem
	Method AutoCompComplete()
		bmx_wxscintilla_autocompcomplete(wxObjectPtr)
	End Method

	Rem
	bbdoc: Define a set of character that when typed cancel the auto-completion list.
	End Rem
	Method AutoCompStops(characterSet:String)
		bmx_wxscintilla_autocompstops(wxObjectPtr, characterSet)
	End Method

	Rem
	bbdoc: Change the separator character in the string setting up an auto-completion list.
	about: Default is space but can be changed if items contain space.
	End Rem
	Method AutoCompSetSeparator(separatorCharacter:Int)
		bmx_wxscintilla_autocompsetseparator(wxObjectPtr, separatorCharacter)
	End Method

	Rem
	bbdoc: Retrieve the auto-completion list separator character.
	End Rem
	Method AutoCompGetSeparator:Int()
		Return bmx_wxscintilla_autocompgetseparator(wxObjectPtr)
	End Method

	Rem
	bbdoc: Select the item in the auto-completion list that starts with a string.
	End Rem
	Method AutoCompSelect(Text:String)
		bmx_wxscintilla_autocompselect(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Should the auto-completion list be cancelled if the user backspaces to a
	about: position before where the box was created.
	End Rem
	Method AutoCompSetCancelAtStart(cancel:Int)
		bmx_wxscintilla_autocompsetcancelatstart(wxObjectPtr, cancel)
	End Method

	Rem
	bbdoc: Retrieve whether auto-completion cancelled by backspacing before start.
	End Rem
	Method AutoCompGetCancelAtStart:Int()
		Return bmx_wxscintilla_autocompgetcancelatstart(wxObjectPtr)
	End Method

	Rem
	bbdoc: Define a set of characters that when typed will cause the autocompletion to
	about: choose the selected item.
	End Rem
	Method AutoCompSetFillUps(characterSet:String)
		bmx_wxscintilla_autocompsetfillups(wxObjectPtr, characterSet)
	End Method

	Rem
	bbdoc: Should a single item auto-completion list automatically choose the item.
	End Rem
	Method AutoCompSetChooseSingle(chooseSingle:Int)
		bmx_wxscintilla_autocompsetchoosesingle(wxObjectPtr, chooseSingle)
	End Method

	Rem
	bbdoc: Retrieve whether a single item auto-completion list automatically choose the item.
	End Rem
	Method AutoCompGetChooseSingle:Int()
		Return bmx_wxscintilla_autocompgetchoosesingle(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether case is significant when performing auto-completion searches.
	End Rem
	Method AutoCompSetIgnoreCase(ignoreCase:Int)
		bmx_wxscintilla_autocompsetignorecase(wxObjectPtr, ignoreCase)
	End Method

	Rem
	bbdoc: Retrieve state of ignore case flag.
	End Rem
	Method AutoCompGetIgnoreCase:Int()
		Return bmx_wxscintilla_autocompgetignorecase(wxObjectPtr)
	End Method

	Rem
	bbdoc: Display a list of strings and send notification when user chooses one.
	End Rem
	Method UserListShow(listType:Int, itemList:String)
		bmx_wxscintilla_userlistshow(wxObjectPtr, listType, itemList)
	End Method

	Rem
	bbdoc: Set whether or not autocompletion is hidden automatically when nothing matches.
	End Rem
	Method AutoCompSetAutoHide(autoHide:Int)
		bmx_wxscintilla_autocompsetautohide(wxObjectPtr, autoHide)
	End Method

	Rem
	bbdoc: Retrieve whether or not autocompletion is hidden automatically when nothing matches.
	End Rem
	Method AutoCompGetAutoHide:Int()
		Return bmx_wxscintilla_autocompgetautohide(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether or not autocompletion deletes any word characters
	about: after the inserted text upon completion.
	End Rem
	Method AutoCompSetDropRestOfWord(dropRestOfWord:Int)
		bmx_wxscintilla_autocompsetdroprestofword(wxObjectPtr, dropRestOfWord)
	End Method

	Rem
	bbdoc: Retrieve whether or not autocompletion deletes any word characters
	about: after the inserted text upon completion.
	End Rem
	Method AutoCompGetDropRestOfWord:Int()
		Return bmx_wxscintilla_autocompgetdroprestofword(wxObjectPtr)
	End Method

	Rem
	bbdoc: Register a bitmap for use in autocompletion lists.
	End Rem
	Method RegisterImage(type_:Int, bitmap:wxBitmap)
		bmx_wxscintilla_registerimage(wxObjectPtr, type_, bitmap.wxObjectPtr)
	End Method

	Rem
	bbdoc: Clear all the registered XPM images.
	End Rem
	Method ClearRegisteredImages()
		bmx_wxscintilla_clearregisteredimages(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the auto-completion list type-separator character.
	End Rem
	Method AutoCompGetTypeSeparator:Int()
		Return bmx_wxscintilla_autocompgettypeseparator(wxObjectPtr)
	End Method

	Rem
	bbdoc: Change the type-separator character in the string setting up an auto-completion list.
	about: Default is '?' but can be changed if items contain '?'.
	End Rem
	Method AutoCompSetTypeSeparator(separatorCharacter:Int)
		bmx_wxscintilla_autocompsettypeseparator(wxObjectPtr, separatorCharacter)
	End Method

	Rem
	bbdoc: Set the maximum width, in characters, of auto-completion and user lists.
	about: Set to 0 to autosize to fit longest item, which is the default.
	End Rem
	Method AutoCompSetMaxWidth(characterCount:Int)
		bmx_wxscintilla_autocompsetmaxwidth(wxObjectPtr, characterCount)
	End Method

	Rem
	bbdoc: Get the maximum width, in characters, of auto-completion and user lists.
	End Rem
	Method AutoCompGetMaxWidth:Int()
		Return bmx_wxscintilla_autocompgetmaxwidth(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the maximum height, in rows, of auto-completion and user lists.
	about: The default is 5 rows.
	End Rem
	Method AutoCompSetMaxHeight(rowCount:Int)
		bmx_wxscintilla_autocompsetmaxheight(wxObjectPtr, rowCount)
	End Method

	Rem
	bbdoc: Set the maximum height, in rows, of auto-completion and user lists.
	End Rem
	Method AutoCompGetMaxHeight:Int()
		Return bmx_wxscintilla_autocompgetmaxheight(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the number of spaces used for one level of indentation.
	End Rem
	Method SetIndent(indentSize:Int)
		bmx_wxscintilla_setindent(wxObjectPtr, indentSize)
	End Method

	Rem
	bbdoc: Retrieve indentation size.
	End Rem
	Method GetIndent:Int()
		Return bmx_wxscintilla_getindent(wxObjectPtr)
	End Method

	Rem
	bbdoc: Indentation will only use space characters if useTabs is false, otherwise
	about: it will use a combination of tabs and spaces.
	End Rem
	Method SetUseTabs(useTabs:Int)
		bmx_wxscintilla_setusetabs(wxObjectPtr, useTabs)
	End Method

	Rem
	bbdoc: Retrieve whether tabs will be used in indentation.
	End Rem
	Method GetUseTabs:Int()
		Return bmx_wxscintilla_getusetabs(wxObjectPtr)
	End Method

	Rem
	bbdoc: Change the indentation of a line to a number of columns.
	End Rem
	Method SetLineIndentation(line:Int, indentSize:Int)
		bmx_wxscintilla_setlineindentation(wxObjectPtr, line, indentSize)
	End Method

	Rem
	bbdoc: Retrieve the number of columns that a line is indented.
	End Rem
	Method GetLineIndentation:Int(line:Int)
		Return bmx_wxscintilla_getlineindentation(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Retrieve the position before the first non indentation character on a line.
	End Rem
	Method GetLineIndentPosition:Int(line:Int)
		Return bmx_wxscintilla_getlineindentposition(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Retrieve the column number of a position, taking tab width into account.
	End Rem
	Method GetColumn:Int(pos:Int)
		Return bmx_wxscintilla_getcolumn(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Count characters between two positions.
	End Rem
	Method CountCharacters:Int(startPos:Int, endPos:Int)
		Return bmx_wxscintilla_countcharacters(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Show or hide the horizontal scroll bar.
	End Rem
	Method SetUseHorizontalScrollBar(show:Int)
		bmx_wxscintilla_setusehorizontalscrollbar(wxObjectPtr, show)
	End Method

	Rem
	bbdoc: Is the horizontal scroll bar visible?
	End Rem
	Method GetUseHorizontalScrollBar:Int()
		Return bmx_wxscintilla_getusehorizontalscrollbar(wxObjectPtr)
	End Method

	Rem
	bbdoc: Show or hide indentation guides.
	End Rem
	Method SetIndentationGuides(indentView:Int)
		bmx_wxscintilla_setindentationguides(wxObjectPtr, indentView)
	End Method

	Rem
	bbdoc: Are the indentation guides visible?
	End Rem
	Method GetIndentationGuides:Int()
		Return bmx_wxscintilla_getindentationguides(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the highlighted indentation guide column.
	about: 0 = no highlighted guide.
	End Rem
	Method SetHighlightGuide(column:Int)
		bmx_wxscintilla_sethighlightguide(wxObjectPtr, column)
	End Method

	Rem
	bbdoc: Get the highlighted indentation guide column.
	End Rem
	Method GetHighlightGuide:Int()
		Return bmx_wxscintilla_gethighlightguide(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the position after the last visible characters on a line.
	End Rem
	Method GetLineEndPosition:Int(line:Int)
		Return bmx_wxscintilla_getlineendposition(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Get the code page used to interpret the bytes of the document as characters.
	End Rem
	Method GetCodePage:Int()
		Return bmx_wxscintilla_getcodepage(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the foreground colour of the caret.
	End Rem
	Method GetCaretForeground:wxColour()
		Return wxColour._create(bmx_wxscintilla_getcaretforeground(wxObjectPtr))
	End Method

	Rem
	bbdoc: In read-only mode?
	End Rem
	Method GetReadOnly:Int()
		Return bmx_wxscintilla_getreadonly(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the position of the caret.
	End Rem
	Method SetCurrentPos(pos:Int)
		bmx_wxscintilla_setcurrentpos(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Sets the position that starts the selection - this becomes the anchor.
	End Rem
	Method SetSelectionStart(pos:Int)
		bmx_wxscintilla_setselectionstart(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Returns the position at the start of the selection.
	End Rem
	Method GetSelectionStart:Int()
		Return bmx_wxscintilla_getselectionstart(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the position that ends the selection - this becomes the currentPosition.
	End Rem
	Method SetSelectionEnd(pos:Int)
		bmx_wxscintilla_setselectionend(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetSelectionEnd:Int()
		Return bmx_wxscintilla_getselectionend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set caret to a position, while removing any existing selection.
	End Rem
	Method SetEmptySelection(pos:Int)
		bmx_wxscintilla_setemptyselection(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Sets the print magnification added to the point size of each style for printing.
	End Rem
	Method SetPrintMagnification(magnification:Int)
		bmx_wxscintilla_setprintmagnification(wxObjectPtr, magnification)
	End Method

	Rem
	bbdoc: Returns the print magnification.
	End Rem
	Method GetPrintMagnification:Int()
		Return bmx_wxscintilla_getprintmagnification(wxObjectPtr)
	End Method

	Rem
	bbdoc: Modify colours when printing for clearer printed text.
	End Rem
	Method SetPrintColourMode(Mode:Int)
		bmx_wxscintilla_setprintcolourmode(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Returns the print colour mode.
	End Rem
	Method GetPrintColourMode:Int()
		Return bmx_wxscintilla_getprintcolourmode(wxObjectPtr)
	End Method

	Rem
	bbdoc: Find some text in the document.
	End Rem
	Method FindText:Int(minPos:Int, maxPos:Int, Text:String, flags:Int)
		Return bmx_wxscintilla_findtext(wxObjectPtr, minPos, maxPos, Text, flags)
	End Method

	Rem
	bbdoc: On Windows, will draw the document into a display context such as a printer.
	End Rem
	Method FormatRange:Int(doDraw:Int, startPos:Int, endPos:Int, draw:wxDC, target:wxDC, renderRect:wxRect, pageRect:wxRect)
		Return bmx_wxscintilla_formatrange(wxObjectPtr, doDraw, startPos, endPos, draw.wxObjectPtr, target.wxObjectPtr, renderRect.wxObjectPtr, pageRect.wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the display line at the top of the display.
	End Rem
	Method GetFirstVisibleLine:Int()
		Return bmx_wxscintilla_getfirstvisibleline(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the contents of a line.
	about: Returns the length of the line.
	End Rem
	Method GetLine:String(line:Int)
		Return bmx_wxscintilla_getline(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Returns the number of lines in the document. There is always at least one.
	End Rem
	Method GetLineCount:Int()
		Return bmx_wxscintilla_getlinecount(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the size in pixels of the left margin.
	End Rem
	Method SetMarginLeft(pixelWidth:Int)
		bmx_wxscintilla_setmarginleft(wxObjectPtr, pixelWidth)
	End Method

	Rem
	bbdoc: Returns the size in pixels of the left margin.
	End Rem
	Method GetMarginLeft:Int()
		Return bmx_wxscintilla_getmarginleft(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the size in pixels of the right margin.
	End Rem
	Method SetMarginRight(pixelWidth:Int)
		bmx_wxscintilla_setmarginright(wxObjectPtr, pixelWidth)
	End Method

	Rem
	bbdoc: Returns the size in pixels of the right margin.
	End Rem
	Method GetMarginRight:Int()
		Return bmx_wxscintilla_getmarginright(wxObjectPtr)
	End Method

	Rem
	bbdoc: Is the document different from when it was last saved?
	End Rem
	Method GetModify:Int()
		Return bmx_wxscintilla_getmodify(wxObjectPtr)
	End Method

	Rem
	bbdoc: Select a range of text.
	End Rem
	Method SetSelection(startPos:Int, endPos:Int)
		bmx_wxscintilla_setselection(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Retrieve the selected text.
	about: Return the length of the text.
	End Rem
	Method GetSelectedText:String()
		Return bmx_wxscintilla_getselectedtext(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve a range of text.
	about: Return the length of the text.
	End Rem
	Method GetTextRange:String(startPos:Int, endPos:Int)
		Return bmx_wxscintilla_gettextrange(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Draw the selection in normal style or with selection highlighted.
	End Rem
	Method HideSelection(normal:Int)
		bmx_wxscintilla_hideselection(wxObjectPtr, normal)
	End Method

	Rem
	bbdoc: Retrieve the line containing a position.
	End Rem
	Method LineFromPosition:Int(pos:Int)
		Return bmx_wxscintilla_linefromposition(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Retrieve the position at the start of a line.
	End Rem
	Method PositionFromLine:Int(line:Int)
		Return bmx_wxscintilla_positionfromline(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Scroll horizontally and vertically.
	End Rem
	Method LineScroll(columns:Int, LINES:Int)
		bmx_wxscintilla_linescroll(wxObjectPtr, columns, LINES)
	End Method

	Rem
	bbdoc: Ensure the caret is visible.
	End Rem
	Method EnsureCaretVisible()
		bmx_wxscintilla_ensurecaretvisible(wxObjectPtr)
	End Method

	Rem
	bbdoc: Replace the selected text with the argument text.
	End Rem
	Method ReplaceSelection(Text:String)
		bmx_wxscintilla_replaceselection(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Set to read only or read write.
	End Rem
	Method SetReadOnly(value:Int)
		bmx_wxscintilla_setreadonly(wxObjectPtr, value)
	End Method

	Rem
	bbdoc: Will a paste succeed?
	End Rem
	Method CanPaste:Int()
		Return bmx_wxscintilla_canpaste(wxObjectPtr)
	End Method

	Rem
	bbdoc: Are there any undoable actions in the undo history?
	End Rem
	Method CanUndo:Int()
		Return bmx_wxscintilla_canundo(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the undo history.
	End Rem
	Method EmptyUndoBuffer()
		bmx_wxscintilla_emptyundobuffer(wxObjectPtr)
	End Method

	Rem
	bbdoc: Undo one action in the undo history.
	End Rem
	Method Undo()
		bmx_wxscintilla_undo(wxObjectPtr)
	End Method

	Rem
	bbdoc: Cut the selection to the clipboard.
	End Rem
	Method Cut()
		bmx_wxscintilla_cut(wxObjectPtr)
	End Method

	Rem
	bbdoc: Copy the selection to the clipboard.
	End Rem
	Method Copy()
		bmx_wxscintilla_copy(wxObjectPtr)
	End Method

	Rem
	bbdoc: Paste the contents of the clipboard into the document replacing the selection.
	End Rem
	Method Paste()
		bmx_wxscintilla_paste(wxObjectPtr)
	End Method

	Rem
	bbdoc: Clear the selection.
	End Rem
	Method Clear()
		bmx_wxscintilla_clear(wxObjectPtr)
	End Method

	Rem
	bbdoc: Replace the contents of the document with the argument text.
	End Rem
	Method SetText(Text:String)
		bmx_wxscintilla_settext(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Retrieve all the text in the document.
	about: Returns number of characters retrieved.
	End Rem
	Method GetText:String()
		Return bmx_wxscintilla_gettext(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the number of characters in the document.
	End Rem
	Method GetTextLength:Int()
		Return bmx_wxscintilla_gettextlength(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set to overtype (true) or insert mode.
	End Rem
	Method SetOvertype(overtype:Int)
		bmx_wxscintilla_setovertype(wxObjectPtr, overtype)
	End Method

	Rem
	bbdoc: Returns true if overtype mode is active otherwise false is returned.
	End Rem
	Method GetOvertype:Int()
		Return bmx_wxscintilla_getovertype(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the width of the insert mode caret.
	End Rem
	Method SetCaretWidth(pixelWidth:Int)
		bmx_wxscintilla_setcaretwidth(wxObjectPtr, pixelWidth)
	End Method

	Rem
	bbdoc: Returns the width of the insert mode caret.
	End Rem
	Method GetCaretWidth:Int()
		Return bmx_wxscintilla_getcaretwidth(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the position that starts the target which is used for updating the
	about: document without affecting the scroll position.
	End Rem
	Method SetTargetStart(pos:Int)
		bmx_wxscintilla_settargetstart(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Get the position that starts the target.
	End Rem
	Method GetTargetStart:Int()
		Return bmx_wxscintilla_gettargetstart(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the position that ends the target which is used for updating the
	about: document without affecting the scroll position.
	End Rem
	Method SetTargetEnd(pos:Int)
		bmx_wxscintilla_settargetend(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Get the position that ends the target.
	End Rem
	Method GetTargetEnd:Int()
		Return bmx_wxscintilla_gettargetend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Replace the target text with the argument text.
	about: Text is counted so it can contain NULs.
	Returns the length of the replacement text.
	End Rem
	Method ReplaceTarget:Int(Text:String)
		Return bmx_wxscintilla_replacetarget(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Replace the target text with the argument text after \d processing.
	about: Text is counted so it can contain NULs.
	Looks for \d where d is between 1 and 9 and replaces these with the strings
	matched in the last search operation which were surrounded by \( and \).
	Returns the length of the replacement text including any change
	caused by processing the \d patterns.
	End Rem
	Method ReplaceTargetRE:Int(Text:String)
		Return bmx_wxscintilla_replacetargetre(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Search for a counted string in the target and set the target to the found
	about: range. Text is counted so it can contain NULs.
	Returns length of range or -1 for failure in which case target is not moved.
	End Rem
	Method SearchInTarget:Int(Text:String)
		Return bmx_wxscintilla_searchintarget(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Set the search flags used by SearchInTarget.
	End Rem
	Method SetSearchFlags(flags:Int)
		bmx_wxscintilla_setsearchflags(wxObjectPtr, flags)
	End Method

	Rem
	bbdoc: Get the search flags used by SearchInTarget.
	End Rem
	Method GetSearchFlags:Int()
		Return bmx_wxscintilla_getsearchflags(wxObjectPtr)
	End Method

	Rem
	bbdoc: Show a call tip containing a definition near position pos.
	End Rem
	Method CallTipShow(pos:Int, definition:String)
		bmx_wxscintilla_calltipshow(wxObjectPtr, pos, definition)
	End Method

	Rem
	bbdoc: Remove the call tip from the screen.
	End Rem
	Method CallTipCancel()
		bmx_wxscintilla_calltipcancel(wxObjectPtr)
	End Method

	Rem
	bbdoc: Is there an active call tip?
	End Rem
	Method CallTipActive:Int()
		Return bmx_wxscintilla_calltipactive(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the position where the caret was before displaying the call tip.
	End Rem
	Method CallTipPosAtStart:Int()
		Return bmx_wxscintilla_calltipposatstart(wxObjectPtr)
	End Method

	Rem
	bbdoc: Highlight a segment of the definition.
	End Rem
	Method CallTipSetHighlight(startPos:Int, endPos:Int)
		bmx_wxscintilla_calltipsethighlight(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Set the background colour for the call tip.
	End Rem
	Method CallTipSetBackground(back:wxColour)
		bmx_wxscintilla_calltipsetbackground(wxObjectPtr, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the foreground colour for the call tip.
	End Rem
	Method CallTipSetForeground(fore:wxColour)
		bmx_wxscintilla_calltipsetforeground(wxObjectPtr, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the foreground colour for the highlighted part of the call tip.
	End Rem
	Method CallTipSetForegroundHighlight(fore:wxColour)
		bmx_wxscintilla_calltipsetforegroundhighlight(wxObjectPtr, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Enable use of STYLE_CALLTIP and set call tip tab size in pixels.
	End Rem
	Method CallTipUseStyle(tabSize:Int)
		bmx_wxscintilla_calltipusestyle(wxObjectPtr, tabSize)
	End Method

	Rem
	bbdoc: Set position of calltip, above or below text.
	End Rem
	Method CallTipSetPosition(above:Int)
		bmx_wxscintilla_calltipsetposition(wxObjectPtr, above)
	End Method

	Rem
	bbdoc: Find the display line of a document line taking hidden lines into account.
	End Rem
	Method VisibleFromDocLine:Int(line:Int)
		Return bmx_wxscintilla_visiblefromdocline(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Find the document line of a display line taking hidden lines into account.
	End Rem
	Method DocLineFromVisible:Int(lineDisplay:Int)
		Return bmx_wxscintilla_doclinefromvisible(wxObjectPtr, lineDisplay)
	End Method

	Rem
	bbdoc: The number of display lines needed to wrap a document line
	End Rem
	Method WrapCount:Int(line:Int)
		Return bmx_wxscintilla_wrapcount(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set the fold level of a line.
	about: This encodes an integer level along with flags indicating whether the
	line is a header and whether it is effectively white space.
	End Rem
	Method SetFoldLevel(line:Int, level:Int)
		bmx_wxscintilla_setfoldlevel(wxObjectPtr, line, level)
	End Method

	Rem
	bbdoc: Retrieve the fold level of a line.
	End Rem
	Method GetFoldLevel:Int(line:Int)
		Return bmx_wxscintilla_getfoldlevel(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Find the last child line of a header line.
	End Rem
	Method GetLastChild:Int(line:Int, level:Int)
		Return bmx_wxscintilla_getlastchild(wxObjectPtr, line, level)
	End Method

	Rem
	bbdoc: Find the parent line of a child line.
	End Rem
	Method GetFoldParent:Int(line:Int)
		Return bmx_wxscintilla_getfoldparent(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Make a range of lines visible.
	End Rem
	Method ShowLines(lineStart:Int, lineEnd:Int)
		bmx_wxscintilla_showlines(wxObjectPtr, lineStart, lineEnd)
	End Method

	Rem
	bbdoc: Make a range of lines invisible.
	End Rem
	Method HideLines(lineStart:Int, lineEnd:Int)
		bmx_wxscintilla_hidelines(wxObjectPtr, lineStart, lineEnd)
	End Method

	Rem
	bbdoc: Is a line visible?
	End Rem
	Method GetLineVisible:Int(line:Int)
		Return bmx_wxscintilla_getlinevisible(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Are all lines visible?
	End Rem
	Method GetAllLinesVisible:Int()
		Return bmx_wxscintilla_getalllinesvisible(wxObjectPtr)
	End Method

	Rem
	bbdoc: Show the children of a header line.
	End Rem
	Method SetFoldExpanded(line:Int, expanded:Int)
		bmx_wxscintilla_setfoldexpanded(wxObjectPtr, line, expanded)
	End Method

	Rem
	bbdoc: Is a header line expanded?
	End Rem
	Method GetFoldExpanded:Int(line:Int)
		Return bmx_wxscintilla_getfoldexpanded(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Switch a header line between expanded and contracted.
	End Rem
	Method ToggleFold(line:Int)
		bmx_wxscintilla_togglefold(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Ensure a particular line is visible by expanding any header line hiding it.
	End Rem
	Method EnsureVisible(line:Int)
		bmx_wxscintilla_ensurevisible(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set some style options for folding.
	End Rem
	Method SetFoldFlags(flags:Int)
		bmx_wxscintilla_setfoldflags(wxObjectPtr, flags)
	End Method

	Rem
	bbdoc: Ensure a particular line is visible by expanding any header line hiding it.
	about: Use the currently set visibility policy to determine which range to display.
	End Rem
	Method EnsureVisibleEnforcePolicy(line:Int)
		bmx_wxscintilla_ensurevisibleenforcepolicy(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Sets whether a tab pressed when caret is within indentation indents.
	End Rem
	Method SetTabIndents(tabIndents:Int)
		bmx_wxscintilla_settabindents(wxObjectPtr, tabIndents)
	End Method

	Rem
	bbdoc: Does a tab pressed when caret is within indentation indent?
	End Rem
	Method GetTabIndents:Int()
		Return bmx_wxscintilla_gettabindents(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets whether a backspace pressed when caret is within indentation unindents.
	End Rem
	Method SetBackSpaceUnIndents(bsUnIndents:Int)
		bmx_wxscintilla_setbackspaceunindents(wxObjectPtr, bsUnIndents)
	End Method

	Rem
	bbdoc: Does a backspace pressed when caret is within indentation unindent?
	End Rem
	Method GetBackSpaceUnIndents:Int()
		Return bmx_wxscintilla_getbackspaceunindents(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the time the mouse must sit still to generate a mouse dwell event.
	End Rem
	Method SetMouseDwellTime(periodMilliseconds:Int)
		bmx_wxscintilla_setmousedwelltime(wxObjectPtr, periodMilliseconds)
	End Method

	Rem
	bbdoc: Retrieve the time the mouse must sit still to generate a mouse dwell event.
	End Rem
	Method GetMouseDwellTime:Int()
		Return bmx_wxscintilla_getmousedwelltime(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get position of start of word.
	End Rem
	Method WordStartPosition:Int(pos:Int, onlyWordCharacters:Int)
		Return bmx_wxscintilla_wordstartposition(wxObjectPtr, pos, onlyWordCharacters)
	End Method

	Rem
	bbdoc: Get position of end of word.
	End Rem
	Method WordEndPosition:Int(pos:Int, onlyWordCharacters:Int)
		Return bmx_wxscintilla_wordendposition(wxObjectPtr, pos, onlyWordCharacters)
	End Method

	Rem
	bbdoc: Sets whether text is word wrapped.
	End Rem
	Method SetWrapMode(Mode:Int)
		bmx_wxscintilla_setwrapmode(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Retrieve whether text is word wrapped.
	End Rem
	Method GetWrapMode:Int()
		Return bmx_wxscintilla_getwrapmode(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the display mode of visual flags for wrapped lines.
	End Rem
	Method SetWrapVisualFlags(wrapVisualFlags:Int)
		bmx_wxscintilla_setwrapvisualflags(wxObjectPtr, wrapVisualFlags)
	End Method

	Rem
	bbdoc: Retrive the display mode of visual flags for wrapped lines.
	End Rem
	Method GetWrapVisualFlags:Int()
		Return bmx_wxscintilla_getwrapvisualflags(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the location of visual flags for wrapped lines.
	End Rem
	Method SetWrapVisualFlagsLocation(wrapVisualFlagsLocation:Int)
		bmx_wxscintilla_setwrapvisualflagslocation(wxObjectPtr, wrapVisualFlagsLocation)
	End Method

	Rem
	bbdoc: Retrive the location of visual flags for wrapped lines.
	End Rem
	Method GetWrapVisualFlagsLocation:Int()
		Return bmx_wxscintilla_getwrapvisualflagslocation(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the start indent for wrapped lines.
	End Rem
	Method SetWrapStartIndent(indent:Int)
		bmx_wxscintilla_setwrapstartindent(wxObjectPtr, indent)
	End Method

	Rem
	bbdoc: Retrive the start indent for wrapped lines.
	End Rem
	Method GetWrapStartIndent:Int()
		Return bmx_wxscintilla_getwrapstartindent(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets how wrapped sublines are placed. Default is fixed.
	End Rem
	Method SetWrapIndentMode(Mode:Int)
		bmx_wxscintilla_setwrapindentmode(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Retrieve how wrapped sublines are placed. Default is fixed.
	End Rem
	Method GetWrapIndentMode:Int()
		Return bmx_wxscintilla_getwrapindentmode(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the degree of caching of layout information.
	End Rem
	Method SetLayoutCache(Mode:Int)
		bmx_wxscintilla_setlayoutcache(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Retrieve the degree of caching of layout information.
	End Rem
	Method GetLayoutCache:Int()
		Return bmx_wxscintilla_getlayoutcache(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the document width assumed for scrolling.
	End Rem
	Method SetScrollWidth(pixelWidth:Int)
		bmx_wxscintilla_setscrollwidth(wxObjectPtr, pixelWidth)
	End Method

	Rem
	bbdoc: Retrieve the document width assumed for scrolling.
	End Rem
	Method GetScrollWidth:Int()
		Return bmx_wxscintilla_getscrollwidth(wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets whether the maximum width line displayed is used to set scroll width.
	End Rem
	Method SetScrollWidthTracking(tracking:Int)
		bmx_wxscintilla_setscrollwidthtracking(wxObjectPtr, tracking)
	End Method

	Rem
	bbdoc: Retrieve whether the scroll width tracks wide lines.
	End Rem
	Method GetScrollWidthTracking:Int()
		Return bmx_wxscintilla_getscrollwidthtracking(wxObjectPtr)
	End Method

	Rem
	bbdoc: Measure the pixel width of some text in a particular style.
	about: NUL terminated text argument.
	Does not handle tab or control characters.
	End Rem
	Method TextWidth:Int(style:Int, Text:String)
		Return bmx_wxscintilla_textwidth(wxObjectPtr, style, Text)
	End Method

	Rem
	bbdoc: Sets the scroll range so that maximum scroll position has
	about: the last line at the bottom of the view (default).
	Setting this to false allows scrolling one page below the last line.
	End Rem
	Method SetEndAtLastLine(endAtLastLine:Int)
		bmx_wxscintilla_setendatlastline(wxObjectPtr, endAtLastLine)
	End Method

	Rem
	bbdoc: Retrieve whether the maximum scroll position has the last
	about: line at the bottom of the view.
	End Rem
	Method GetEndAtLastLine:Int()
		Return bmx_wxscintilla_getendatlastline(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the height of a particular line of text in pixels.
	End Rem
	Method TextHeight:Int(line:Int)
		Return bmx_wxscintilla_textheight(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Show or hide the vertical scroll bar.
	End Rem
	Method SetUseVerticalScrollBar(show:Int)
		bmx_wxscintilla_setuseverticalscrollbar(wxObjectPtr, show)
	End Method

	Rem
	bbdoc: Is the vertical scroll bar visible?
	End Rem
	Method GetUseVerticalScrollBar:Int()
		Return bmx_wxscintilla_getuseverticalscrollbar(wxObjectPtr)
	End Method

	Rem
	bbdoc: Append a string to the end of the document without changing the selection.
	End Rem
	Method AppendText(Text:String)
		bmx_wxscintilla_appendtext(wxObjectPtr, Text)
	End Method

	Rem
	bbdoc: Is drawing done in two phases with backgrounds drawn before faoregrounds?
	End Rem
	Method GetTwoPhaseDraw:Int()
		Return bmx_wxscintilla_gettwophasedraw(wxObjectPtr)
	End Method

	Rem
	bbdoc: In twoPhaseDraw mode, drawing is performed in two phases, first the background
	about: and then the foreground. This avoids chopping off characters that overlap the next run.
	End Rem
	Method SetTwoPhaseDraw(twoPhase:Int)
		bmx_wxscintilla_settwophasedraw(wxObjectPtr, twoPhase)
	End Method

	Rem
	bbdoc: Scroll so that a display line is at the top of the display.
	End Rem
	Method SetFirstVisibleLine(lineDisplay:Int)
		bmx_wxscintilla_setfirstvisibleline(wxObjectPtr, lineDisplay)
	End Method

	Rem
	bbdoc: Change the effect of pasting when there are multiple selections.
	End Rem
	Method SetMultiPaste(multiPaste:Int)
		bmx_wxscintilla_setmultipaste(wxObjectPtr, multiPaste)
	End Method

	Rem
	bbdoc: Retrieve the effect of pasting when there are multiple selections..
	End Rem
	Method GetMultiPaste:Int()
		Return bmx_wxscintilla_getmultipaste(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the value of a tag from a regular expression search.
	End Rem
	Method GetTag:String(tagNumber:Int)
		Return bmx_wxscintilla_gettag(wxObjectPtr, tagNumber)
	End Method

	Rem
	bbdoc: Make the target range start and end be the same as the selection range start and end.
	End Rem
	Method TargetFromSelection()
		bmx_wxscintilla_targetfromselection(wxObjectPtr)
	End Method

	Rem
	bbdoc: Join the lines in the target.
	End Rem
	Method LinesJoin()
		bmx_wxscintilla_linesjoin(wxObjectPtr)
	End Method

	Rem
	bbdoc: Split the lines in the target into lines that are less wide than pixelWidth
	about: where possible.
	End Rem
	Method LinesSplit(pixelWidth:Int)
		bmx_wxscintilla_linessplit(wxObjectPtr, pixelWidth)
	End Method

	Rem
	bbdoc: Set the colours used as a chequerboard pattern in the fold margin
	End Rem
	Method SetFoldMarginColour(useSetting:Int, back:wxColour)
		bmx_wxscintilla_setfoldmargincolour(wxObjectPtr, useSetting, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the colours used as a chequerboard pattern in the fold margin
	End Rem
	Method SetFoldMarginHiColour(useSetting:Int, fore:wxColour)
		bmx_wxscintilla_setfoldmarginhicolour(wxObjectPtr, useSetting, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret down one line.
	End Rem
	Method LineDown:Int()
		bmx_wxscintilla_linedown(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret down one line extending selection to new caret position.
	End Rem
	Method LineDownExtend()
		bmx_wxscintilla_linedownextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret up one line.
	End Rem
	Method LineUp:Int()
		bmx_wxscintilla_lineup(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret up one line extending selection to new caret position.
	End Rem
	Method LineUpExtend()
		bmx_wxscintilla_lineupextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one character.
	End Rem
	Method CharLeft()
		bmx_wxscintilla_charleft(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one character extending selection to new caret position.
	End Rem
	Method CharLeftExtend()
		bmx_wxscintilla_charleftextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one character.
	End Rem
	Method CharRight()
		bmx_wxscintilla_charright(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one character extending selection to new caret position.
	End Rem
	Method CharRightExtend()
		bmx_wxscintilla_charrightextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one word.
	End Rem
	Method WordLeft()
		bmx_wxscintilla_wordleft(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one word extending selection to new caret position.
	End Rem
	Method WordLeftExtend()
		bmx_wxscintilla_wordleftextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one word.
	End Rem
	Method WordRight()
		bmx_wxscintilla_wordright(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one word extending selection to new caret position.
	End Rem
	Method WordRightExtend()
		bmx_wxscintilla_wordrightextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position on line.
	End Rem
	Method Home()
		bmx_wxscintilla_home(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position on line extending selection to new caret position.
	End Rem
	Method HomeExtend()
		bmx_wxscintilla_homeextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position on line.
	End Rem
	Method LineEnd()
		bmx_wxscintilla_lineend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position on line extending selection to new caret position.
	End Rem
	Method LineEndExtend()
		bmx_wxscintilla_lineendextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position in document.
	End Rem
	Method DocumentStart()
		bmx_wxscintilla_documentstart(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position in document extending selection to new caret position.
	End Rem
	Method DocumentStartExtend()
		bmx_wxscintilla_documentstartextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position in document.
	End Rem
	Method DocumentEnd()
		bmx_wxscintilla_documentend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position in document extending selection to new caret position.
	End Rem
	Method DocumentEndExtend()
		bmx_wxscintilla_documentendextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret one page up.
	End Rem
	Method PageUp:Int()
		bmx_wxscintilla_pageup(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret one page up extending selection to new caret position.
	End Rem
	Method PageUpExtend()
		bmx_wxscintilla_pageupextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret one page down.
	End Rem
	Method PageDown:Int()
		bmx_wxscintilla_pagedown(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret one page down extending selection to new caret position.
	End Rem
	Method PageDownExtend()
		bmx_wxscintilla_pagedownextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Switch from insert to overtype mode or the reverse.
	End Rem
	Method EditToggleOvertype()
		bmx_wxscintilla_edittoggleovertype(wxObjectPtr)
	End Method

	Rem
	bbdoc: Cancel any modes such as call tip or auto-completion list display.
	End Rem
	Method Cancel()
		bmx_wxscintilla_cancel(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the selection or if no selection, the character before the caret.
	End Rem
	Method DeleteBack()
		bmx_wxscintilla_deleteback(wxObjectPtr)
	End Method

	Rem
	bbdoc: If selection is empty or all on one line replace the selection with a tab character.
	about: If more than one line selected, indent the lines.
	End Rem
	Method Tab()
		bmx_wxscintilla_tab(wxObjectPtr)
	End Method

	Rem
	bbdoc: Dedent the selected lines.
	End Rem
	Method BackTab()
		bmx_wxscintilla_backtab(wxObjectPtr)
	End Method

	Rem
	bbdoc: Insert a new line, may use a CRLF, CR or LF depending on EOL mode.
	End Rem
	Method NewLine()
		bmx_wxscintilla_newline(wxObjectPtr)
	End Method

	Rem
	bbdoc: Insert a Form Feed character.
	End Rem
	Method FormFeed()
		bmx_wxscintilla_formfeed(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to before first visible character on line.
	about: If already there move to first character on line.
	End Rem
	Method VCHome()
		bmx_wxscintilla_vchome(wxObjectPtr)
	End Method

	Rem
	bbdoc: Like VCHome but extending selection to new caret position.
	End Rem
	Method VCHomeExtend()
		bmx_wxscintilla_vchomeextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Magnify the displayed text by increasing the sizes by 1 point.
	End Rem
	Method ZoomIn()
		bmx_wxscintilla_zoomin(wxObjectPtr)
	End Method

	Rem
	bbdoc: Make the displayed text smaller by decreasing the sizes by 1 point.
	End Rem
	Method ZoomOut()
		bmx_wxscintilla_zoomout(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the word to the left of the caret.
	End Rem
	Method DelWordLeft()
		bmx_wxscintilla_delwordleft(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the word to the right of the caret.
	End Rem
	Method DelWordRight()
		bmx_wxscintilla_delwordright(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the word to the right of the caret, but not the trailing non-word characters.
	End Rem
	Method DelWordRightEnd()
		bmx_wxscintilla_delwordrightend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Cut the line containing the caret.
	End Rem
	Method LineCut()
		bmx_wxscintilla_linecut(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the line containing the caret.
	End Rem
	Method LineDelete()
		bmx_wxscintilla_linedelete(wxObjectPtr)
	End Method

	Rem
	bbdoc: Switch the current line with the previous.
	End Rem
	Method LineTranspose()
		bmx_wxscintilla_linetranspose(wxObjectPtr)
	End Method

	Rem
	bbdoc: Duplicate the current line.
	End Rem
	Method LineDuplicate()
		bmx_wxscintilla_lineduplicate(wxObjectPtr)
	End Method

	Rem
	bbdoc: Transform the selection to lower case.
	End Rem
	Method LowerCase()
		bmx_wxscintilla_lowercase(wxObjectPtr)
	End Method

	Rem
	bbdoc: Transform the selection to upper case.
	End Rem
	Method UpperCase()
		bmx_wxscintilla_uppercase(wxObjectPtr)
	End Method

	Rem
	bbdoc: Scroll the document down, keeping the caret visible.
	End Rem
	Method LineScrollDown()
		bmx_wxscintilla_linescrolldown(wxObjectPtr)
	End Method

	Rem
	bbdoc: Scroll the document up, keeping the caret visible.
	End Rem
	Method LineScrollUp()
		bmx_wxscintilla_linescrollup(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete the selection or if no selection, the character before the caret.
	about: Will not delete the character before at the start of a line.
	End Rem
	Method DeleteBackNotLine()
		bmx_wxscintilla_deletebacknotline(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position on display line.
	End Rem
	Method HomeDisplay()
		bmx_wxscintilla_homedisplay(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position on display line extending selection to
	about: new caret position.
	End Rem
	Method HomeDisplayExtend()
		bmx_wxscintilla_homedisplayextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position on display line.
	End Rem
	Method LineEndDisplay()
		bmx_wxscintilla_lineenddisplay(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position on display line extending selection to new
	about: caret position.
	End Rem
	Method LineEndDisplayExtend()
		bmx_wxscintilla_lineenddisplayextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method HomeWrap()
		bmx_wxscintilla_homewrap(wxObjectPtr)
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method HomeWrapExtend()
		bmx_wxscintilla_homewrapextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method LineEndWrap()
		bmx_wxscintilla_lineendwrap(wxObjectPtr)
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method LineEndWrapExtend()
		bmx_wxscintilla_lineendwrapextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method VCHomeWrap()
		bmx_wxscintilla_vchomewrap(wxObjectPtr)
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method VCHomeWrapExtend()
		bmx_wxscintilla_vchomewrapextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Copy the line containing the caret.
	End Rem
	Method LineCopy()
		bmx_wxscintilla_linecopy(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move the caret inside current view if it's not there already.
	End Rem
	Method MoveCaretInsideView()
		bmx_wxscintilla_movecaretinsideview(wxObjectPtr)
	End Method

	Rem
	bbdoc: How many characters are on a line, including end of line characters?
	End Rem
	Method LineLength:Int(line:Int)
		Return bmx_wxscintilla_linelength(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Highlight the characters at two positions.
	End Rem
	Method BraceHighlight(pos1:Int, pos2:Int)
		bmx_wxscintilla_bracehighlight(wxObjectPtr, pos1, pos2)
	End Method

	Rem
	bbdoc: Use specified indicator to highlight matching braces instead of changing their style.
	End Rem
	Method BraceHighlightIndicator(useBraceHighlightIndicator:Int, indicator:Int)
		bmx_wxscintilla_bracehighlightindicator(wxObjectPtr, useBraceHighlightIndicator, indicator)
	End Method

	Rem
	bbdoc: Highlight the character at a position indicating there is no matching brace.
	End Rem
	Method BraceBadLight(pos:Int)
		bmx_wxscintilla_bracebadlight(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Use specified indicator to highlight non matching brace instead of changing its style.
	End Rem
	Method BraceBadLightIndicator(useBraceBadLightIndicator:Int, indicator:Int)
		bmx_wxscintilla_bracebadlightindicator(wxObjectPtr, useBraceBadLightIndicator, indicator)
	End Method

	Rem
	bbdoc: Find the position of a matching brace or INVALID_POSITION if no match.
	End Rem
	Method BraceMatch:Int(pos:Int)
		Return bmx_wxscintilla_bracematch(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Are the end of line characters visible?
	End Rem
	Method GetViewEOL:Int()
		Return bmx_wxscintilla_getvieweol(wxObjectPtr)
	End Method

	Rem
	bbdoc: Make the end of line characters visible or invisible.
	End Rem
	Method SetViewEOL(visible:Int)
		bmx_wxscintilla_setvieweol(wxObjectPtr, visible)
	End Method

	Rem
	bbdoc: Retrieve a pointer to the document object.
	End Rem
	Method GetDocPointer:Byte Ptr()
		Return bmx_wxscintilla_getdocpointer(wxObjectPtr)
	End Method

	Rem
	bbdoc: Change the document object used.
	End Rem
	Method SetDocPointer(docPointer:Byte Ptr)
		bmx_wxscintilla_setdocpointer(wxObjectPtr, docPointer)
	End Method

	Rem
	bbdoc: Set which document modification events are sent to the container.
	End Rem
	Method SetModEventMask(mask:Int)
		bmx_wxscintilla_setmodeventmask(wxObjectPtr, mask)
	End Method

	Rem
	bbdoc: Retrieve the column number which text should be kept within.
	End Rem
	Method GetEdgeColumn:Int()
		Return bmx_wxscintilla_getedgecolumn(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the column number of the edge.
	about: If text goes past the edge then it is highlighted.
	End Rem
	Method SetEdgeColumn(column:Int)
		bmx_wxscintilla_setedgecolumn(wxObjectPtr, column)
	End Method

	Rem
	bbdoc: Retrieve the edge highlight mode.
	End Rem
	Method GetEdgeMode:Int()
		Return bmx_wxscintilla_getedgemode(wxObjectPtr)
	End Method

	Rem
	bbdoc: The edge may be displayed by a line (EDGE_LINE) or by highlighting text that
	about: goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE).
	End Rem
	Method SetEdgeMode(Mode:Int)
		bmx_wxscintilla_setedgemode(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Retrieve the colour used in edge indication.
	End Rem
	Method GetEdgeColour:wxColour()
		Return wxColour._create(bmx_wxscintilla_getedgecolour(wxObjectPtr))
	End Method

	Rem
	bbdoc: Change the colour used in edge indication.
	End Rem
	Method SetEdgeColour(edgeColour:wxColour)
		bmx_wxscintilla_setedgecolour(wxObjectPtr, edgeColour.wxObjectPtr)
	End Method

	Rem
	bbdoc: Sets the current caret position to be the search anchor.
	End Rem
	Method SearchAnchor()
		bmx_wxscintilla_searchanchor(wxObjectPtr)
	End Method

	Rem
	bbdoc: Find some text starting at the search anchor.
	about: Does not ensure the selection is visible.
	End Rem
	Method SearchNext:Int(flags:Int, Text:String)
		Return bmx_wxscintilla_searchnext(wxObjectPtr, flags, Text)
	End Method

	Rem
	bbdoc: Find some text starting at the search anchor and moving backwards.
	about: Does not ensure the selection is visible.
	End Rem
	Method SearchPrev:Int(flags:Int, Text:String)
		Return bmx_wxscintilla_searchprev(wxObjectPtr, flags, Text)
	End Method

	Rem
	bbdoc: Retrieves the number of lines completely visible.
	End Rem
	Method LinesOnScreen:Int()
		Return bmx_wxscintilla_linesonscreen(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether a pop up menu is displayed automatically when the user presses
	about: the wrong mouse button.
	End Rem
	Method UsePopUp(allowPopUp:Int)
		bmx_wxscintilla_usepopup(wxObjectPtr, allowPopUp)
	End Method

	Rem
	bbdoc: Is the selection rectangular? The alternative is the more common stream selection.
	End Rem
	Method SelectionIsRectangle:Int()
		Return bmx_wxscintilla_selectionisrectangle(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the zoom level. This number of points is added to the size of all fonts.
	about: It may be positive to magnify or negative to reduce.
	End Rem
	Method SetZoom(zoom:Int)
		bmx_wxscintilla_setzoom(wxObjectPtr, zoom)
	End Method

	Rem
	bbdoc: Retrieve the zoom level.
	End Rem
	Method GetZoom:Int()
		Return bmx_wxscintilla_getzoom(wxObjectPtr)
	End Method

	Rem
	bbdoc: Create a new document object.
	about: Starts with reference count of 1 and not selected into editor.
	End Rem
	Method CreateDocument:Byte Ptr()
		Return bmx_wxscintilla_createdocument(wxObjectPtr)
	End Method

	Rem
	bbdoc: Extend life of document.
	End Rem
	Method AddRefDocument(docPointer:Byte Ptr)
		bmx_wxscintilla_addrefdocument(wxObjectPtr, docPointer)
	End Method

	Rem
	bbdoc: Release a reference to the document, deleting document if it fades to black.
	End Rem
	Method ReleaseDocument(docPointer:Byte Ptr)
		bmx_wxscintilla_releasedocument(wxObjectPtr, docPointer)
	End Method

	Rem
	bbdoc: Get which document modification events are sent to the container.
	End Rem
	Method GetModEventMask:Int()
		Return bmx_wxscintilla_getmodeventmask(wxObjectPtr)
	End Method

	Rem
	bbdoc: Change internal focus flag.
	End Rem
	Method SetSTCFocus(focus:Int)
		bmx_wxscintilla_setstcfocus(wxObjectPtr, focus)
	End Method

	Rem
	bbdoc: Get internal focus flag.
	End Rem
	Method GetSTCFocus:Int()
		Return bmx_wxscintilla_getstcfocus(wxObjectPtr)
	End Method

	Rem
	bbdoc: Change error status - 0 = OK.
	End Rem
	Method SetStatus(statusCode:Int)
		bmx_wxscintilla_setstatus(wxObjectPtr, statusCode)
	End Method

	Rem
	bbdoc: Get error status.
	End Rem
	Method GetStatus:Int()
		Return bmx_wxscintilla_getstatus(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether the mouse is captured when its button is pressed.
	End Rem
	Method SetMouseDownCaptures(captures:Int)
		bmx_wxscintilla_setmousedowncaptures(wxObjectPtr, captures)
	End Method

	Rem
	bbdoc: Get whether mouse gets captured.
	End Rem
	Method GetMouseDownCaptures:Int()
		Return bmx_wxscintilla_getmousedowncaptures(wxObjectPtr)
	End Method

	Rem
	bbdoc: Change the way control characters are displayed:
	about: If symbol is < 32, keep the drawn way, else, use the given character.
	End Rem
	Method SetControlCharSymbol(symbol:Int)
		bmx_wxscintilla_setcontrolcharsymbol(wxObjectPtr, symbol)
	End Method

	Rem
	bbdoc: Get the way control characters are displayed.
	End Rem
	Method GetControlCharSymbol:Int()
		Return bmx_wxscintilla_getcontrolcharsymbol(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move to the previous change in capitalisation.
	End Rem
	Method WordPartLeft()
		bmx_wxscintilla_wordpartleft(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move to the previous change in capitalisation extending selection
	about: to new caret position.
	End Rem
	Method WordPartLeftExtend()
		bmx_wxscintilla_wordpartleftextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move to the change next in capitalisation.
	End Rem
	Method WordPartRight()
		bmx_wxscintilla_wordpartright(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move to the next change in capitalisation extending selection
	about: to new caret position.
	End Rem
	Method WordPartRightExtend()
		bmx_wxscintilla_wordpartrightextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the way the display area is determined when a particular line
	about: is to be moved to by Find, FindNext, GotoLine, etc.
	End Rem
	Method SetVisiblePolicy(visiblePolicy:Int, visibleSlop:Int)
		bmx_wxscintilla_setvisiblepolicy(wxObjectPtr, visiblePolicy, visibleSlop)
	End Method

	Rem
	bbdoc: Delete back from the current position to the start of the line.
	End Rem
	Method DelLineLeft()
		bmx_wxscintilla_dellineleft(wxObjectPtr)
	End Method

	Rem
	bbdoc: Delete forwards from the current position to the end of the line.
	End Rem
	Method DelLineRight()
		bmx_wxscintilla_dellineright(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get and Set the xOffset (ie, horizontal scroll position).
	End Rem
	Method SetXOffset(newOffset:Int)
		bmx_wxscintilla_setxoffset(wxObjectPtr, newOffset)
	End Method

	Rem
	bbdoc: Get and Set the xOffset (ie, horizontal scroll position).
	End Rem
	Method GetXOffset:Int()
		Return bmx_wxscintilla_getxoffset(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the last x chosen value to be the caret x position.
	End Rem
	Method ChooseCaretX()
		bmx_wxscintilla_choosecaretx(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the way the caret is kept visible when going sideways.
	about: The exclusion zone is given in pixels.
	End Rem
	Method SetXCaretPolicy(caretPolicy:Int, caretSlop:Int)
		bmx_wxscintilla_setxcaretpolicy(wxObjectPtr, caretPolicy, caretSlop)
	End Method

	Rem
	bbdoc: Set the way the line the caret is on is kept visible.
	about: The exclusion zone is given in lines.
	End Rem
	Method SetYCaretPolicy(caretPolicy:Int, caretSlop:Int)
		bmx_wxscintilla_setycaretpolicy(wxObjectPtr, caretPolicy, caretSlop)
	End Method

	Rem
	bbdoc: Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE).
	End Rem
	Method SetPrintWrapMode(Mode:Int)
		bmx_wxscintilla_setprintwrapmode(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Is printing line wrapped?
	End Rem
	Method GetPrintWrapMode:Int()
		Return bmx_wxscintilla_getprintwrapmode(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set a fore colour for active hotspots.
	End Rem
	Method SetHotspotActiveForeground(useSetting:Int, fore:wxColour)
		bmx_wxscintilla_sethotspotactiveforeground(wxObjectPtr, useSetting, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set a back colour for active hotspots.
	End Rem
	Method SetHotspotActiveBackground(useSetting:Int, back:wxColour)
		bmx_wxscintilla_sethotspotactivebackground(wxObjectPtr, useSetting, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Enable / Disable underlining active hotspots.
	End Rem
	Method SetHotspotActiveUnderline(underline:Int)
		bmx_wxscintilla_sethotspotactiveunderline(wxObjectPtr, underline)
	End Method

	Rem
	bbdoc: Limit hotspots to single line so hotspots on two lines don't merge.
	End Rem
	Method SetHotspotSingleLine(singleLine:Int)
		bmx_wxscintilla_sethotspotsingleline(wxObjectPtr, singleLine)
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaDown()
		bmx_wxscintilla_paradown(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaDownExtend()
		bmx_wxscintilla_paradownextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaUp()
		bmx_wxscintilla_paraup(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaUpExtend()
		bmx_wxscintilla_paraupextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Given a valid document position, return the previous position taking code
	about: page into account. Returns 0 if passed 0.
	End Rem
	Method PositionBefore:Int(pos:Int)
		Return bmx_wxscintilla_positionbefore(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Given a valid document position, return the next position taking code
	about: page into account. Maximum value returned is the last position in the document.
	End Rem
	Method PositionAfter:Int(pos:Int)
		Return bmx_wxscintilla_positionafter(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Copy a range of text to the clipboard. Positions are clipped into the document.
	End Rem
	Method CopyRange(startPos:Int, endPos:Int)
		bmx_wxscintilla_copyrange(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) or
	about: by lines (SC_SEL_LINES).
	End Rem
	Method SetSelectionMode(Mode:Int)
		bmx_wxscintilla_setselectionmode(wxObjectPtr, Mode)
	End Method

	Rem
	bbdoc: Get the mode of the current selection.
	End Rem
	Method GetSelectionMode:Int()
		Return bmx_wxscintilla_getselectionmode(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line).
	End Rem
	Method GetLineSelStartPosition:Int(line:Int)
		Return bmx_wxscintilla_getlineselstartposition(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line).
	End Rem
	Method GetLineSelEndPosition:Int(line:Int)
		Return bmx_wxscintilla_getlineselendposition(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Move caret down one line, extending rectangular selection to new caret position.
	End Rem
	Method LineDownRectExtend()
		bmx_wxscintilla_linedownrectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret up one line, extending rectangular selection to new caret position.
	End Rem
	Method LineUpRectExtend()
		bmx_wxscintilla_lineuprectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one character, extending rectangular selection to new caret position.
	End Rem
	Method CharLeftRectExtend()
		bmx_wxscintilla_charleftrectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one character, extending rectangular selection to new caret position.
	End Rem
	Method CharRightRectExtend()
		bmx_wxscintilla_charrightrectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to first position on line, extending rectangular selection to new caret position.
	End Rem
	Method HomeRectExtend()
		bmx_wxscintilla_homerectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to before first visible character on line.
	about: If already there move to first character on line.
	In either case, extend rectangular selection to new caret position.
	End Rem
	Method VCHomeRectExtend()
		bmx_wxscintilla_vchomerectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to last position on line, extending rectangular selection to new caret position.
	End Rem
	Method LineEndRectExtend()
		bmx_wxscintilla_lineendrectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret one page up, extending rectangular selection to new caret position.
	End Rem
	Method PageUpRectExtend()
		bmx_wxscintilla_pageuprectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret one page down, extending rectangular selection to new caret position.
	End Rem
	Method PageDownRectExtend()
		bmx_wxscintilla_pagedownrectextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to top of page, or one page up if already at top of page.
	End Rem
	Method StutteredPageUp()
		bmx_wxscintilla_stutteredpageup(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to top of page, or one page up if already at top of page, extending selection to new caret position.
	End Rem
	Method StutteredPageUpExtend()
		bmx_wxscintilla_stutteredpageupextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to bottom of page, or one page down if already at bottom of page.
	End Rem
	Method StutteredPageDown()
		bmx_wxscintilla_stutteredpagedown(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position.
	End Rem
	Method StutteredPageDownExtend()
		bmx_wxscintilla_stutteredpagedownextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one word, position cursor at end of word.
	End Rem
	Method WordLeftEnd()
		bmx_wxscintilla_wordleftend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret left one word, position cursor at end of word, extending selection to new caret position.
	End Rem
	Method WordLeftEndExtend()
		bmx_wxscintilla_wordleftendextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one word, position cursor at end of word.
	End Rem
	Method WordRightEnd()
		bmx_wxscintilla_wordrightend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move caret right one word, position cursor at end of word, extending selection to new caret position.
	End Rem
	Method WordRightEndExtend()
		bmx_wxscintilla_wordrightendextend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the set of characters making up whitespace for when moving or selecting by word.
	about: Should be called after SetWordChars.
	End Rem
	Method SetWhitespaceChars(characters:String)
		bmx_wxscintilla_setwhitespacechars(wxObjectPtr, characters)
	End Method

	Rem
	bbdoc: Get the set of characters making up whitespace for when moving or selecting by word.
	End Rem
	Method GetWhitespaceChars:String()
		Return bmx_wxscintilla_getwhitespacechars(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the set of characters making up punctuation characters
	about: Should be called after SetWordChars.
	End Rem
	Method SetPunctuationChars(characters:String)
		bmx_wxscintilla_setpunctuationchars(wxObjectPtr, characters)
	End Method

	Rem
	bbdoc: Get the set of characters making up punctuation characters
	End Rem
	Method GetPunctuationChars:String()
		Return bmx_wxscintilla_getpunctuationchars(wxObjectPtr)
	End Method

	Rem
	bbdoc: Reset the set of characters for whitespace and word characters to the defaults.
	End Rem
	Method SetCharsDefault()
		bmx_wxscintilla_setcharsdefault(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get currently selected item position in the auto-completion list
	End Rem
	Method AutoCompGetCurrent:Int()
		Return bmx_wxscintilla_autocompgetcurrent(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference.
	End Rem
	Method AutoCompSetCaseInsensitiveBehaviour(behaviour:Int)
		bmx_wxscintilla_autocompsetcaseinsensitivebehaviour(wxObjectPtr, behaviour)
	End Method

	Rem
	bbdoc: Get auto-completion case insensitive behaviour.
	End Rem
	Method AutoCompGetCaseInsensitiveBehaviour:Int()
		Return bmx_wxscintilla_autocompgetcaseinsensitivebehaviour(wxObjectPtr)
	End Method

	Rem
	bbdoc: Enlarge the document to a particular size of text bytes.
	End Rem
	Method Allocate(bytes:Int)
		bmx_wxscintilla_allocate(wxObjectPtr, bytes)
	End Method

	Rem
	bbdoc: Find the position of a column on a line taking into account tabs and
	about: multi-byte characters. If beyond end of line, return line end position.
	End Rem
	Method FindColumn:Int(line:Int, column:Int)
		Return bmx_wxscintilla_findcolumn(wxObjectPtr, line, column)
	End Method

	Rem
	bbdoc: Can the caret preferred x position only be changed by explicit movement commands?
	End Rem
	Method GetCaretSticky:Int()
		Return bmx_wxscintilla_getcaretsticky(wxObjectPtr)
	End Method

	Rem
	bbdoc: Stop the caret preferred x position changing when the user types.
	End Rem
	Method SetCaretSticky(useCaretStickyBehaviour:Int)
		bmx_wxscintilla_setcaretsticky(wxObjectPtr, useCaretStickyBehaviour)
	End Method

	Rem
	bbdoc: Switch between sticky and non-sticky: meant to be bound to a key.
	End Rem
	Method ToggleCaretSticky()
		bmx_wxscintilla_togglecaretsticky(wxObjectPtr)
	End Method

	Rem
	bbdoc: Enable/Disable convert-on-paste for line endings
	End Rem
	Method SetPasteConvertEndings(convert:Int)
		bmx_wxscintilla_setpasteconvertendings(wxObjectPtr, convert)
	End Method

	Rem
	bbdoc: Get convert-on-paste setting
	End Rem
	Method GetPasteConvertEndings:Int()
		Return bmx_wxscintilla_getpasteconvertendings(wxObjectPtr)
	End Method

	Rem
	bbdoc: Duplicate the selection. If selection empty duplicate the line containing the caret.
	End Rem
	Method SelectionDuplicate()
		bmx_wxscintilla_selectionduplicate(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set background alpha of the caret line.
	End Rem
	Method SetCaretLineBackAlpha(alpha:Int)
		bmx_wxscintilla_setcaretlinebackalpha(wxObjectPtr, alpha)
	End Method

	Rem
	bbdoc: Get the background alpha of the caret line.
	End Rem
	Method GetCaretLineBackAlpha:Int()
		Return bmx_wxscintilla_getcaretlinebackalpha(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the style of the caret to be drawn.
	End Rem
	Method SetCaretStyle(caretStyle:Int)
		bmx_wxscintilla_setcaretstyle(wxObjectPtr, caretStyle)
	End Method

	Rem
	bbdoc: Returns the current style of the caret.
	End Rem
	Method GetCaretStyle:Int()
		Return bmx_wxscintilla_getcaretstyle(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the indicator used for IndicatorFillRange and IndicatorClearRange
	End Rem
	Method SetIndicatorCurrent(indicator:Int)
		bmx_wxscintilla_setindicatorcurrent(wxObjectPtr, indicator)
	End Method

	Rem
	bbdoc: Get the current indicator
	End Rem
	Method GetIndicatorCurrent:Int()
		Return bmx_wxscintilla_getindicatorcurrent(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the value used for IndicatorFillRange
	End Rem
	Method SetIndicatorValue(value:Int)
		bmx_wxscintilla_setindicatorvalue(wxObjectPtr, value)
	End Method

	Rem
	bbdoc: Get the current indicator value
	End Rem
	Method GetIndicatorValue:Int()
		Return bmx_wxscintilla_getindicatorvalue(wxObjectPtr)
	End Method

	Rem
	bbdoc: Turn a indicator on over a range.
	End Rem
	Method IndicatorFillRange(position:Int, fillLength:Int)
		bmx_wxscintilla_indicatorfillrange(wxObjectPtr, position, fillLength)
	End Method

	Rem
	bbdoc: Turn a indicator off over a range.
	End Rem
	Method IndicatorClearRange(position:Int, clearLength:Int)
		bmx_wxscintilla_indicatorclearrange(wxObjectPtr, position, clearLength)
	End Method

	Rem
	bbdoc: Are any indicators present at position?
	End Rem
	Method IndicatorAllOnFor:Int(position:Int)
		Return bmx_wxscintilla_indicatorallonfor(wxObjectPtr, position)
	End Method

	Rem
	bbdoc: What value does a particular indicator have at at a position?
	End Rem
	Method IndicatorValueAt:Int(indicator:Int, position:Int)
		Return bmx_wxscintilla_indicatorvalueat(wxObjectPtr, indicator, position)
	End Method

	Rem
	bbdoc: Where does a particular indicator start?
	End Rem
	Method IndicatorStart:Int(indicator:Int, position:Int)
		Return bmx_wxscintilla_indicatorstart(wxObjectPtr, indicator, position)
	End Method

	Rem
	bbdoc: Where does a particular indicator end?
	End Rem
	Method IndicatorEnd:Int(indicator:Int, position:Int)
		Return bmx_wxscintilla_indicatorend(wxObjectPtr, indicator, position)
	End Method

	Rem
	bbdoc: Set number of entries in position cache
	End Rem
	Method SetPositionCacheSize(size:Int)
		bmx_wxscintilla_setpositioncachesize(wxObjectPtr, size)
	End Method

	Rem
	bbdoc: How many entries are allocated to the position cache?
	End Rem
	Method GetPositionCacheSize:Int()
		Return bmx_wxscintilla_getpositioncachesize(wxObjectPtr)
	End Method

	Rem
	bbdoc: Copy the selection, if selection empty copy the line with the caret
	End Rem
	Method CopyAllowLine()
		bmx_wxscintilla_copyallowline(wxObjectPtr)
	End Method

	Rem
	bbdoc: Return a position which, to avoid performance costs, should not be within
	about: the range of a call to GetRangePointer.
	End Rem
	Method GetGapPosition:Int()
		Return bmx_wxscintilla_getgapposition(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the alpha fill colour of the given indicator.
	End Rem
	Method IndicatorSetAlpha(indicator:Int, alpha:Int)
		bmx_wxscintilla_indicatorsetalpha(wxObjectPtr, indicator, alpha)
	End Method

	Rem
	bbdoc: Get the alpha fill colour of the given indicator.
	End Rem
	Method IndicatorGetAlpha:Int(indicator:Int)
		Return bmx_wxscintilla_indicatorgetalpha(wxObjectPtr, indicator)
	End Method

	Rem
	bbdoc: Set the alpha outline colour of the given indicator.
	End Rem
	Method IndicatorSetOutlineAlpha(indicator:Int, alpha:Int)
		bmx_wxscintilla_indicatorsetoutlinealpha(wxObjectPtr, indicator, alpha)
	End Method

	Rem
	bbdoc: Get the alpha outline colour of the given indicator.
	End Rem
	Method IndicatorGetOutlineAlpha:Int(indicator:Int)
		Return bmx_wxscintilla_indicatorgetoutlinealpha(wxObjectPtr, indicator)
	End Method

	Rem
	bbdoc: Set extra ascent for each line
	End Rem
	Method SetExtraAscent(extraAscent:Int)
		bmx_wxscintilla_setextraascent(wxObjectPtr, extraAscent)
	End Method

	Rem
	bbdoc: Get extra ascent for each line
	End Rem
	Method GetExtraAscent:Int()
		Return bmx_wxscintilla_getextraascent(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set extra descent for each line
	End Rem
	Method SetExtraDescent(extraDescent:Int)
		bmx_wxscintilla_setextradescent(wxObjectPtr, extraDescent)
	End Method

	Rem
	bbdoc: Get extra descent for each line
	End Rem
	Method GetExtraDescent:Int()
		Return bmx_wxscintilla_getextradescent(wxObjectPtr)
	End Method

	Rem
	bbdoc: Which symbol was defined for markerNumber with MarkerDefine
	End Rem
	Method GetMarkerSymbolDefined:Int(markerNumber:Int)
		Return bmx_wxscintilla_getmarkersymboldefined(wxObjectPtr, markerNumber)
	End Method

	Rem
	bbdoc: Set the text in the text margin for a line
	End Rem
	Method MarginSetText(line:Int, Text:String)
		bmx_wxscintilla_marginsettext(wxObjectPtr, line, Text)
	End Method

	Rem
	bbdoc: Get the text in the text margin for a line
	End Rem
	Method MarginGetText:String(line:Int)
		Return bmx_wxscintilla_margingettext(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set the style number for the text margin for a line
	End Rem
	Method MarginSetStyle(line:Int, style:Int)
		bmx_wxscintilla_marginsetstyle(wxObjectPtr, line, style)
	End Method

	Rem
	bbdoc: Get the style number for the text margin for a line
	End Rem
	Method MarginGetStyle:Int(line:Int)
		Return bmx_wxscintilla_margingetstyle(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set the style in the text margin for a line
	End Rem
	Method MarginSetStyles(line:Int, styles:String)
		bmx_wxscintilla_marginsetstyles(wxObjectPtr, line, styles)
	End Method

	Rem
	bbdoc: Get the styles in the text margin for a line
	End Rem
	Method MarginGetStyles:String(line:Int)
		Return bmx_wxscintilla_margingetstyles(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Clear the margin text on all lines
	End Rem
	Method MarginTextClearAll()
		bmx_wxscintilla_margintextclearall(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the start of the range of style numbers used for margin text
	End Rem
	Method MarginSetStyleOffset(style:Int)
		bmx_wxscintilla_marginsetstyleoffset(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get the start of the range of style numbers used for margin text
	End Rem
	Method MarginGetStyleOffset:Int()
		Return bmx_wxscintilla_margingetstyleoffset(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the margin options.
	End Rem
	Method SetMarginOptions(marginOptions:Int)
		bmx_wxscintilla_setmarginoptions(wxObjectPtr, marginOptions)
	End Method

	Rem
	bbdoc: Get the margin options.
	End Rem
	Method GetMarginOptions:Int()
		Return bmx_wxscintilla_getmarginoptions(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the annotation text for a line
	End Rem
	Method AnnotationSetText(line:Int, Text:String)
		bmx_wxscintilla_annotationsettext(wxObjectPtr, line, Text)
	End Method

	Rem
	bbdoc: Get the annotation text for a line
	End Rem
	Method AnnotationGetText:String(line:Int)
		Return bmx_wxscintilla_annotationgettext(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set the style number for the annotations for a line
	End Rem
	Method AnnotationSetStyle(line:Int, style:Int)
		bmx_wxscintilla_annotationsetstyle(wxObjectPtr, line, style)
	End Method

	Rem
	bbdoc: Get the style number for the annotations for a line
	End Rem
	Method AnnotationGetStyle:Int(line:Int)
		Return bmx_wxscintilla_annotationgetstyle(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Set the annotation styles for a line
	End Rem
	Method AnnotationSetStyles(line:Int, styles:String)
		bmx_wxscintilla_annotationsetstyles(wxObjectPtr, line, styles)
	End Method

	Rem
	bbdoc: Get the annotation styles for a line
	End Rem
	Method AnnotationGetStyles:String(line:Int)
		Return bmx_wxscintilla_annotationgetstyles(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Get the number of annotation lines for a line
	End Rem
	Method AnnotationGetLines:Int(line:Int)
		Return bmx_wxscintilla_annotationgetlines(wxObjectPtr, line)
	End Method

	Rem
	bbdoc: Clear the annotations from all lines
	End Rem
	Method AnnotationClearAll()
		bmx_wxscintilla_annotationclearall(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the visibility for the annotations for a view
	End Rem
	Method AnnotationSetVisible(visible:Int)
		bmx_wxscintilla_annotationsetvisible(wxObjectPtr, visible)
	End Method

	Rem
	bbdoc: Get the visibility for the annotations for a view
	End Rem
	Method AnnotationGetVisible:Int()
		Return bmx_wxscintilla_annotationgetvisible(wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the start of the range of style numbers used for annotations
	End Rem
	Method AnnotationSetStyleOffset(style:Int)
		bmx_wxscintilla_annotationsetstyleoffset(wxObjectPtr, style)
	End Method

	Rem
	bbdoc: Get the start of the range of style numbers used for annotations
	End Rem
	Method AnnotationGetStyleOffset:Int()
		Return bmx_wxscintilla_annotationgetstyleoffset(wxObjectPtr)
	End Method

	Rem
	bbdoc: Add a container action to the undo stack
	End Rem
	Method AddUndoAction(token:Int, flags:Int)
		bmx_wxscintilla_addundoaction(wxObjectPtr, token, flags)
	End Method

	Rem
	bbdoc: Find the position of a character from a point within the window.
	End Rem
	Method CharPositionFromPoint:Int(x:Int, y:Int)
		Return bmx_wxscintilla_charpositionfrompoint(wxObjectPtr, x, y)
	End Method

	Rem
	bbdoc: Find the position of a character from a point within the window.
	about: Return INVALID_POSITION if not close to text.
	End Rem
	Method CharPositionFromPointClose:Int(x:Int, y:Int)
		Return bmx_wxscintilla_charpositionfrompointclose(wxObjectPtr, x, y)
	End Method

	Rem
	bbdoc: Set whether multiple selections can be made
	End Rem
	Method SetMultipleSelection(multipleSelection:Int)
		bmx_wxscintilla_setmultipleselection(wxObjectPtr, multipleSelection)
	End Method

	Rem
	bbdoc: Whether multiple selections can be made
	End Rem
	Method GetMultipleSelection:Int()
		Return bmx_wxscintilla_getmultipleselection(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether typing can be performed into multiple selections
	End Rem
	Method SetAdditionalSelectionTyping(additionalSelectionTyping:Int)
		bmx_wxscintilla_setadditionalselectiontyping(wxObjectPtr, additionalSelectionTyping)
	End Method

	Rem
	bbdoc: Whether typing can be performed into multiple selections
	End Rem
	Method GetAdditionalSelectionTyping:Int()
		Return bmx_wxscintilla_getadditionalselectiontyping(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether additional carets will blink
	End Rem
	Method SetAdditionalCaretsBlink(additionalCaretsBlink:Int)
		bmx_wxscintilla_setadditionalcaretsblink(wxObjectPtr, additionalCaretsBlink)
	End Method

	Rem
	bbdoc: Whether additional carets will blink
	End Rem
	Method GetAdditionalCaretsBlink:Int()
		Return bmx_wxscintilla_getadditionalcaretsblink(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set whether additional carets are visible
	End Rem
	Method SetAdditionalCaretsVisible(additionalCaretsBlink:Int)
		bmx_wxscintilla_setadditionalcaretsvisible(wxObjectPtr, additionalCaretsBlink)
	End Method

	Rem
	bbdoc: Whether additional carets are visible
	End Rem
	Method GetAdditionalCaretsVisible:Int()
		Return bmx_wxscintilla_getadditionalcaretsvisible(wxObjectPtr)
	End Method

	Rem
	bbdoc: How many selections are there?
	End Rem
	Method GetSelections:Int()
		Return bmx_wxscintilla_getselections(wxObjectPtr)
	End Method

	Rem
	bbdoc: Clear selections to a single empty stream selection
	End Rem
	Method ClearSelections()
		bmx_wxscintilla_clearselections(wxObjectPtr)
	End Method

	Rem
	bbdoc: Add a selection
	End Rem
	Method AddSelection:Int(caret:Int, anchor:Int)
		Return bmx_wxscintilla_addselection(wxObjectPtr, caret, anchor)
	End Method

	Rem
	bbdoc: Set the main selection
	End Rem
	Method SetMainSelection(selection:Int)
		bmx_wxscintilla_setmainselection(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method GetMainSelection:Int()
		Return bmx_wxscintilla_getmainselection(wxObjectPtr)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method SetSelectionNCaret(selection:Int, pos:Int)
		bmx_wxscintilla_setselectionncaret(wxObjectPtr, selection, pos)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method GetSelectionNCaret:Int(selection:Int)
		Return bmx_wxscintilla_getselectionncaret(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method SetSelectionNAnchor(selection:Int, posAnchor:Int)
		bmx_wxscintilla_setselectionnanchor(wxObjectPtr, selection, posAnchor)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method GetSelectionNAnchor:Int(selection:Int)
		Return bmx_wxscintilla_getselectionnanchor(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method SetSelectionNCaretVirtualSpace(selection:Int, space:Int)
		bmx_wxscintilla_setselectionncaretvirtualspace(wxObjectPtr, selection, space)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method GetSelectionNCaretVirtualSpace:Int(selection:Int)
		Return bmx_wxscintilla_getselectionncaretvirtualspace(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method SetSelectionNAnchorVirtualSpace(selection:Int, space:Int)
		bmx_wxscintilla_setselectionnanchorvirtualspace(wxObjectPtr, selection, space)
	End Method

	Rem
	bbdoc: Which selection is the main selection
	End Rem
	Method GetSelectionNAnchorVirtualSpace:Int(selection:Int)
		Return bmx_wxscintilla_getselectionnanchorvirtualspace(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Sets the position that starts the selection - this becomes the anchor.
	End Rem
	Method SetSelectionNStart(selection:Int, pos:Int)
		bmx_wxscintilla_setselectionnstart(wxObjectPtr, selection, pos)
	End Method

	Rem
	bbdoc: Returns the position at the start of the selection.
	End Rem
	Method GetSelectionNStart:Int(selection:Int)
		Return bmx_wxscintilla_getselectionnstart(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Sets the position that ends the selection - this becomes the currentPosition.
	End Rem
	Method SetSelectionNEnd(selection:Int, pos:Int)
		bmx_wxscintilla_setselectionnend(wxObjectPtr, selection, pos)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetSelectionNEnd:Int(selection:Int)
		Return bmx_wxscintilla_getselectionnend(wxObjectPtr, selection)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method SetRectangularSelectionCaret(pos:Int)
		bmx_wxscintilla_setrectangularselectioncaret(wxObjectPtr, pos)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetRectangularSelectionCaret:Int()
		Return bmx_wxscintilla_getrectangularselectioncaret(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method SetRectangularSelectionAnchor(posAnchor:Int)
		bmx_wxscintilla_setrectangularselectionanchor(wxObjectPtr, posAnchor)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetRectangularSelectionAnchor:Int()
		Return bmx_wxscintilla_getrectangularselectionanchor(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method SetRectangularSelectionCaretVirtualSpace(space:Int)
		bmx_wxscintilla_setrectangularselectioncaretvirtualspace(wxObjectPtr, space)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetRectangularSelectionCaretVirtualSpace:Int()
		Return bmx_wxscintilla_getrectangularselectioncaretvirtualspace(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method SetRectangularSelectionAnchorVirtualSpace(space:Int)
		bmx_wxscintilla_setrectangularselectionanchorvirtualspace(wxObjectPtr, space)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetRectangularSelectionAnchorVirtualSpace:Int()
		Return bmx_wxscintilla_getrectangularselectionanchorvirtualspace(wxObjectPtr)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method SetVirtualSpaceOptions(virtualSpaceOptions:Int)
		bmx_wxscintilla_setvirtualspaceoptions(wxObjectPtr, virtualSpaceOptions)
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetVirtualSpaceOptions:Int()
		Return bmx_wxscintilla_getvirtualspaceoptions(wxObjectPtr)
	End Method

	Rem
	bbdoc: On GTK+, allow selecting the modifier key to use for mouse-based
	about: rectangular selection. Often the window manager requires Alt+Mouse Drag
	for moving windows.
	Valid values are SCMOD_CTRL(default), SCMOD_ALT, or SCMOD_SUPER.
	End Rem
	Method SetRectangularSelectionModifier(modifier:Int)
		bmx_wxscintilla_setrectangularselectionmodifier(wxObjectPtr, modifier)
	End Method

	Rem
	bbdoc: Get the modifier key used for rectangular selection.
	End Rem
	Method GetRectangularSelectionModifier:Int()
		Return bmx_wxscintilla_getrectangularselectionmodifier(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the foreground colour of additional selections.
	about: Must have previously called SetSelFore with non-zero first argument for this to have an effect.
	End Rem
	Method SetAdditionalSelForeground(fore:wxColour)
		bmx_wxscintilla_setadditionalselforeground(wxObjectPtr, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the background colour of additional selections.
	about: Must have previously called SetSelBack with non-zero first argument for this to have an effect.
	End Rem
	Method SetAdditionalSelBackground(back:wxColour)
		bmx_wxscintilla_setadditionalselbackground(wxObjectPtr, back.wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the alpha of the selection.
	End Rem
	Method SetAdditionalSelAlpha(alpha:Int)
		bmx_wxscintilla_setadditionalselalpha(wxObjectPtr, alpha)
	End Method

	Rem
	bbdoc: Get the alpha of the selection.
	End Rem
	Method GetAdditionalSelAlpha:Int()
		Return bmx_wxscintilla_getadditionalselalpha(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the foreground colour of additional carets.
	End Rem
	Method SetAdditionalCaretForeground(fore:wxColour)
		bmx_wxscintilla_setadditionalcaretforeground(wxObjectPtr, fore.wxObjectPtr)
	End Method

	Rem
	bbdoc: Get the foreground colour of additional carets.
	End Rem
	Method GetAdditionalCaretForeground:wxColour()
		Return wxColour._create(bmx_wxscintilla_getadditionalcaretforeground(wxObjectPtr))
	End Method

	Rem
	bbdoc: Set the main selection to the next selection.
	End Rem
	Method RotateSelection()
		bmx_wxscintilla_rotateselection(wxObjectPtr)
	End Method

	Rem
	bbdoc: Swap that caret and anchor of the main selection.
	End Rem
	Method SwapMainAnchorCaret()
		bmx_wxscintilla_swapmainanchorcaret(wxObjectPtr)
	End Method

	Rem
	bbdoc: Indicate that the internal state of a lexer has changed over a range and therefore
	about: there may be a need to redraw.
	End Rem
	Method ChangeLexerState:Int(startPos:Int, endPos:Int)
		Return bmx_wxscintilla_changelexerstate(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Find the next line at or after lineStart that is a contracted fold header line.
	about: Return -1 when no more lines.
	End Rem
	Method ContractedFoldNext:Int(lineStart:Int)
		Return bmx_wxscintilla_contractedfoldnext(wxObjectPtr, lineStart)
	End Method

	Rem
	bbdoc: Centre current line in window.
	End Rem
	Method VerticalCentreCaret()
		bmx_wxscintilla_verticalcentrecaret(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move the selected lines up one line, shifting the line above after the selection
	End Rem
	Method MoveSelectedLinesUp()
		bmx_wxscintilla_moveselectedlinesup(wxObjectPtr)
	End Method

	Rem
	bbdoc: Move the selected lines down one line, shifting the line below before the selection
	End Rem
	Method MoveSelectedLinesDown()
		bmx_wxscintilla_moveselectedlinesdown(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the identifier reported as idFrom in notification messages.
	End Rem
	Method SetIdentifier(identifier:Int)
		bmx_wxscintilla_setidentifier(wxObjectPtr, identifier)
	End Method

	Rem
	bbdoc: Get the identifier.
	End Rem
	Method GetIdentifier:Int()
		Return bmx_wxscintilla_getidentifier(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the width for future RGBA image data.
	End Rem
	Method RGBAImageSetWidth(width:Int)
		bmx_wxscintilla_rgbaimagesetwidth(wxObjectPtr, width)
	End Method

	Rem
	bbdoc: Set the height for future RGBA image data.
	End Rem
	Method RGBAImageSetHeight(height:Int)
		bmx_wxscintilla_rgbaimagesetheight(wxObjectPtr, height)
	End Method

	Rem
	bbdoc: Define a marker from RGBA data.
	about: It has the width and height from RGBAImageSetWidth/Height
	End Rem
	Method MarkerDefineRGBAImage(markerNumber:Int, pixels:Byte Ptr)
		bmx_wxscintilla_markerdefinergbaimage(wxObjectPtr, markerNumber, pixels)
	End Method

	Rem
	bbdoc: Register an RGBA image for use in autocompletion lists.
	about: It has the width and height from RGBAImageSetWidth/Height
	End Rem
	Method RegisterRGBAImage(type_:Int, pixels:Byte Ptr)
		bmx_wxscintilla_registerrgbaimage(wxObjectPtr, type_, pixels)
	End Method

	Rem
	bbdoc: Scroll to start of document.
	End Rem
	Method ScrollToStart()
		bmx_wxscintilla_scrolltostart(wxObjectPtr)
	End Method

	Rem
	bbdoc: Scroll to end of document.
	End Rem
	Method ScrollToEnd()
		bmx_wxscintilla_scrolltoend(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the technology used.
	End Rem
	Method SetTechnology(technology:Int)
		bmx_wxscintilla_settechnology(wxObjectPtr, technology)
	End Method

	Rem
	bbdoc: Get the tech.
	End Rem
	Method GetTechnology:Int()
		Return bmx_wxscintilla_gettechnology(wxObjectPtr)
	End Method

	Rem
	bbdoc: Start notifying the container of all key presses and commands.
	End Rem
	Method StartRecord()
		bmx_wxscintilla_startrecord(wxObjectPtr)
	End Method

	Rem
	bbdoc: Stop notifying the container of all key presses and commands.
	End Rem
	Method StopRecord()
		bmx_wxscintilla_stoprecord(wxObjectPtr)
	End Method

	Rem
	bbdoc: Set the lexing language of the document.
	End Rem
	Method SetLexer(lexer:Int)
		bmx_wxscintilla_setlexer(wxObjectPtr, lexer)
	End Method

	Rem
	bbdoc: Retrieve the lexing language of the document.
	End Rem
	Method GetLexer:Int()
		Return bmx_wxscintilla_getlexer(wxObjectPtr)
	End Method

	Rem
	bbdoc: Colourise a segment of the document using the current lexing language.
	End Rem
	Method Colourise(startPos:Int, endPos:Int)
		bmx_wxscintilla_colourise(wxObjectPtr, startPos, endPos)
	End Method

	Rem
	bbdoc: Set up a value that may be used by a lexer for some optional feature.
	End Rem
	Method SetProperty(key:String, value:String)
		bmx_wxscintilla_setproperty(wxObjectPtr, key, value)
	End Method

	Rem
	bbdoc: Set up the key words used by the lexer.
	End Rem
	Method SetKeyWords(keywordSet:Int, keyWords:String)
		bmx_wxscintilla_setkeywords(wxObjectPtr, keywordSet, keyWords)
	End Method

	Rem
	bbdoc: Set the lexing language of the document based on string name.
	End Rem
	Method SetLexerLanguage(language:String)
		bmx_wxscintilla_setlexerlanguage(wxObjectPtr, language)
	End Method

	Rem
	bbdoc: Retrieve a "property" value previously set with SetProperty.
	End Rem
	Method GetProperty:String(key:String)
		Return bmx_wxscintilla_getproperty(wxObjectPtr, key)
	End Method

	Rem
	bbdoc: Retrieve a "property" value previously set with SetProperty,
	about: with "$()" variable replacement on returned buffer.
	End Rem
	Method GetPropertyExpanded:String(key:String)
		Return bmx_wxscintilla_getpropertyexpanded(wxObjectPtr, key)
	End Method

	Rem
	bbdoc: Retrieve a "property" value previously set with SetProperty,
	about: interpreted as an int AFTER any "$()" variable replacement.
	End Rem
	Method GetPropertyInt:Int(key:String)
		Return bmx_wxscintilla_getpropertyint(wxObjectPtr, key)
	End Method

	Rem
	bbdoc: Retrieve the number of bits the current lexer needs for styling.
	End Rem
	Method GetStyleBitsNeeded:Int()
		Return bmx_wxscintilla_getstylebitsneeded(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve a '\n' separated list of properties understood by the current lexer.
	End Rem
	Method PropertyNames:String()
		Return bmx_wxscintilla_propertynames(wxObjectPtr)
	End Method

	Rem
	bbdoc: Retrieve the type of a property.
	End Rem
	Method PropertyType:Int(name:String)
		Return bmx_wxscintilla_propertytype(wxObjectPtr, name)
	End Method

	Rem
	bbdoc: Describe a property.
	End Rem
	Method DescribeProperty:String(name:String)
		Return bmx_wxscintilla_describeproperty(wxObjectPtr, name)
	End Method

	Rem
	bbdoc: Retrieve a '\n' separated list of descriptions of the keyword sets understood by the current lexer.
	End Rem
	Method DescribeKeyWordSets:String()
		Return bmx_wxscintilla_describekeywordsets(wxObjectPtr)
	End Method

	' //--Autogenerated
	' End of the generated code...

	' This stuff is all hand-coded...

	Rem
	bbdoc: 
	End Rem
	Method GetCurrentLine:Int()
		Return bmx_wxscintilla_getcurrentline(wxObjectPtr)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method StyleSetSpec(style:Int, spec:String)
		bmx_wxscintilla_stylesetspec(wxObjectPtr, style, spec)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method StyleSetFontFont(style:Int, font:wxFont)
		bmx_wxscintilla_stylesetfontfont(wxObjectPtr, style, font.wxObjectPtr)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method StyleSetFontAttr(style:Int, size:Int, faceName:String, bold:Int, italic:Int, underline:Int, ..
			encoding:Int = wxFONTENCODING_DEFAULT)
		bmx_wxscintilla_stylesetfontattr(wxObjectPtr, style, size, faceName, bold, italic, underline, encoding)
	End Method
	
	'Method StyleSetCharacterSet(style:Int, characterSet:Int)
	'End Method
	
	Rem
	bbdoc: 
	End Rem
	Method StyleSetFontEncoding (style:Int, encoding:Int)
		bmx_wxscintilla_stylesetfontencoding(wxObjectPtr, style, encoding)
	End Method
	
	Rem
	bbdoc: When key+modifiers combination is pressed perform cmd.
	End Rem
	Method CmdKeyAssign(key:Int, modifiers:Int, cmd:Int)
		bmx_wxscintilla_cmdkeyassign(wxObjectPtr, key, modifiers, cmd)
	End Method
	
	Rem
	bbdoc: When key+modifiers combination is pressed do nothing.
	End Rem
	Method CmdKeyClear(key:Int, modifiers:Int)
		bmx_wxscintilla_cmdkeyclear(wxObjectPtr, key, modifiers)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method CmdKeyExecute(cmd:Int)
		bmx_wxscintilla_cmdkeyexecute(wxObjectPtr, cmd)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method SetMargins(leftMargin:Int, rightMargin:Int)
		bmx_wxscintilla_setmargins(wxObjectPtr, leftMargin, rightMargin)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method GetSelection(startPos:Int Var, endPos:Int Var)
		bmx_wxscintilla_getselection(wxObjectPtr, Varptr startPos, Varptr endPos)
	End Method
	
	Rem
	bbdoc: Retrieve the point in the window where a position is displayed.
	End Rem
	Method PointFromPosition(pos:Int, x:Int Var, y:Int Var)
		bmx_wxscintilla_pointfromposition(wxObjectPtr, pos, Varptr x, Varptr y)
	End Method
	
	Rem
	bbdoc: Scroll enough to make the given line visible
	End Rem
	Method ScrollToLine(line:Int)
		bmx_wxscintilla_scrolltoline(wxObjectPtr, line)
	End Method
	
	Rem
	bbdoc: Scroll enough to make the given column visible
	End Rem
	Method ScrollToColumn(column:Int)
		bmx_wxscintilla_scrolltocolumn(wxObjectPtr, column)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method SendMsg:Int(msg:Int, wp:Int = 0, lp:Int = 0)
	End Method
	
	Rem
	bbdoc: Set the vertical scrollbar to use instead of the one that's built-in.
	End Rem
	Method SetVScrollBar(bar:wxScrollBar)
		bmx_wxscintilla_setvscrollbar(wxObjectPtr, bar.wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Set the horizontal scrollbar to use instead of the one that's built-in.
	End Rem
	Method SetHScrollBar(bar:wxScrollBar)
		bmx_wxscintilla_sethscrollbar(wxObjectPtr, bar.wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Can be used to prevent the EVT_CHAR handler from adding the char
	End Rem
	Method GetLastKeydownProcessed:Int()
		Return bmx_wxscintilla_getlastkeydownprocessed(wxObjectPtr)
	End Method
	
	Rem
	bbdoc: Can be used to prevent the EVT_CHAR handler from adding the char
	End Rem
	Method SetLastKeydownProcessed(val:Int)
		bmx_wxscintilla_setlastkeydownprocessed(wxObjectPtr, val)
	End Method
	
	Rem
	bbdoc: Write the contents of the editor to filename
	End Rem
	Method SaveFile:Int(filename:String)
		Return bmx_wxscintilla_savefile(wxObjectPtr, filename)
	End Method
	
	Rem
	bbdoc: Load the contents of filename into the editor
	End Rem
	Method LoadFile:Int(filename:String)
		Return bmx_wxscintilla_loadfile(wxObjectPtr, filename)
	End Method
	
	'wxDragResult DoDragOver (wxCoord x, wxCoord y, wxDragResult def);
	
	'bool DoDropText (Long x, Long y, Const wxString& data);
	
	'wxDragResult DoDragEnter (wxCoord x, wxCoord y, wxDragResult def);
	
	'void DoDragLeave ();
	
	Rem
	bbdoc: 
	End Rem
	Method SetUseAntiAliasing(useAA:Int)
		bmx_wxscintilla_setuseantialiasing(wxObjectPtr, useAA)
	End Method
	
	Rem
	bbdoc: 
	End Rem
	Method GetUseAntiAliasing:Int()
		Return bmx_wxscintilla_getuseantialiasing(wxObjectPtr)
	End Method

	Rem
	bbdoc: Helper method for setting marker properties.
	End Rem
	Method DefineMarker(marker:Int, markerType:Int, foreground:wxColour, background:wxColour)
		MarkerDefine(marker, markerType)
		MarkerSetForeground(marker, foreground)
		MarkerSetBackground(marker, background)
	End Method

End Type

Rem
bbdoc: 
End Rem
Type wxScintillaEvent Extends wxCommandEvent

	Function Create:wxEvent(wxEventPtr:Byte Ptr, evt:TEventHandler)
		Local this:wxScintillaEvent = New wxScintillaEvent
		
		this.init(wxEventPtr, evt)
		
		Return this
	End Function

	Method GetPosition:Int()
		Return bmx_wxscintillaevent_getposition(wxEventPtr)
	End Method
	
	Method GetKey:Int()
		Return bmx_wxscintillaevent_getkey(wxEventPtr)
	End Method
	
	Method GetModifiers:Int()
		Return bmx_wxscintillaevent_getmodifiers(wxEventPtr)
	End Method
	
	Method GetModificationType:Int()
		Return bmx_wxscintillaevent_getmodificationtype(wxEventPtr)
	End Method
	
	Method GetText:String()
		Return bmx_wxscintillaevent_gettext(wxEventPtr)
	End Method
	
	Method GetLength:Int()
		Return bmx_wxscintillaevent_getlength(wxEventPtr)
	End Method
	
	Method GetLinesAdded:Int()
		Return bmx_wxscintillaevent_getlinesadded(wxEventPtr)
	End Method
	
	Method GetLine:Int()
		Return bmx_wxscintillaevent_getline(wxEventPtr)
	End Method
	
	Method GetFoldLevelNow:Int()
		Return bmx_wxscintillaevent_getfoldlevelnow(wxEventPtr)
	End Method
	
	Method GetFoldLevelPrev:Int()
		Return bmx_wxscintillaevent_getfoldlevelprev(wxEventPtr)
	End Method
	
	Method GetMargin:Int()
		Return bmx_wxscintillaevent_getmargin(wxEventPtr)
	End Method
	
	Method GetMessage:Int()
		Return bmx_wxscintillaevent_getmessage(wxEventPtr)
	End Method
	
	Method GetWParam:Int()
		Return bmx_wxscintillaevent_getwparam(wxEventPtr)
	End Method
	
	Method GetLParam:Int()
		Return bmx_wxscintillaevent_getlparam(wxEventPtr)
	End Method
	
	Method GetListType:Int()
		Return bmx_wxscintillaevent_getlisttype(wxEventPtr)
	End Method
	
	Method GetX:Int()
		Return bmx_wxscintillaevent_getx(wxEventPtr)
	End Method
	
	Method GetY:Int()
		Return bmx_wxscintillaevent_gety(wxEventPtr)
	End Method
	
	Method GetDragText:String()
		Return bmx_wxscintillaevent_getdragtext(wxEventPtr)
	End Method
	
	Method GetDragAllowMove:Int()
		Return bmx_wxscintillaevent_getdragallowmove(wxEventPtr)
	End Method
	
'    wxDragResult GetDragResult()

	Method GetShift:Int()
		Return bmx_wxscintillaevent_getshift(wxEventPtr)
	End Method
	
	Method GetControl:Int()
		Return bmx_wxscintillaevent_getcontrol(wxEventPtr)
	End Method
	
	Method GetAlt:Int()
		Return bmx_wxscintillaevent_getalt(wxEventPtr)
	End Method
	

End Type

Type TScintillaEventFactory Extends TEventFactory

	Method CreateEvent:wxEvent(wxEventPtr:Byte Ptr, evt:TEventHandler)
	
		Select evt.eventType
			Case wxEVT_SCI_CHANGE, ..
					wxEVT_SCI_STYLENEEDED, ..
					wxEVT_SCI_CHARADDED, ..
					wxEVT_SCI_SAVEPOINTREACHED, ..
					wxEVT_SCI_SAVEPOINTLEFT, ..
					wxEVT_SCI_ROMODIFYATTEMPT, ..
					wxEVT_SCI_KEY, ..
					wxEVT_SCI_DOUBLECLICK, ..
					wxEVT_SCI_UPDATEUI, ..
					wxEVT_SCI_MODIFIED, ..
					wxEVT_SCI_MACRORECORD, ..
					wxEVT_SCI_MARGINCLICK, ..
					wxEVT_SCI_NEEDSHOWN, ..
					wxEVT_SCI_PAINTED, ..
					wxEVT_SCI_USERLISTSELECTION, ..
					wxEVT_SCI_URIDROPPED, ..
					wxEVT_SCI_DWELLSTART, ..
					wxEVT_SCI_DWELLEND, ..
					wxEVT_SCI_START_DRAG, ..
					wxEVT_SCI_DRAG_OVER, ..
					wxEVT_SCI_DO_DROP, ..
					wxEVT_SCI_ZOOM, ..
					wxEVT_SCI_HOTSPOT_CLICK, ..
					wxEVT_SCI_HOTSPOT_DCLICK, ..
					wxEVT_SCI_CALLTIP_CLICK, ..
					wxEVT_SCI_AUTOCOMP_SELECTION, ..
					wxEVT_STC_INDICATOR_CLICK, ..
					wxEVT_STC_INDICATOR_RELEASE, ..
					wxEVT_STC_AUTOCOMP_CANCELLED, ..
					wxEVT_STC_AUTOCOMP_CHAR_DELETED, ..
					wxEVT_STC_HOTSPOT_RELEASE_CLICK
				Return wxScintillaEvent.Create(wxEventPtr, evt)
		End Select
		
		Return Null
	End Method

	Method GetEventType:Int(eventType:Int)
		Select eventType
			Case wxEVT_SCI_CHANGE, ..
					wxEVT_SCI_STYLENEEDED, ..
					wxEVT_SCI_CHARADDED, ..
					wxEVT_SCI_SAVEPOINTREACHED, ..
					wxEVT_SCI_SAVEPOINTLEFT, ..
					wxEVT_SCI_ROMODIFYATTEMPT, ..
					wxEVT_SCI_KEY, ..
					wxEVT_SCI_DOUBLECLICK, ..
					wxEVT_SCI_UPDATEUI, ..
					wxEVT_SCI_MODIFIED, ..
					wxEVT_SCI_MACRORECORD, ..
					wxEVT_SCI_MARGINCLICK, ..
					wxEVT_SCI_NEEDSHOWN, ..
					wxEVT_SCI_PAINTED, ..
					wxEVT_SCI_USERLISTSELECTION, ..
					wxEVT_SCI_URIDROPPED, ..
					wxEVT_SCI_DWELLSTART, ..
					wxEVT_SCI_DWELLEND, ..
					wxEVT_SCI_START_DRAG, ..
					wxEVT_SCI_DRAG_OVER, ..
					wxEVT_SCI_DO_DROP, ..
					wxEVT_SCI_ZOOM, ..
					wxEVT_SCI_HOTSPOT_CLICK, ..
					wxEVT_SCI_HOTSPOT_DCLICK, ..
					wxEVT_SCI_CALLTIP_CLICK, ..
					wxEVT_SCI_AUTOCOMP_SELECTION, ..
					wxEVT_STC_INDICATOR_CLICK, ..
					wxEVT_STC_INDICATOR_RELEASE, ..
					wxEVT_STC_AUTOCOMP_CANCELLED, ..
					wxEVT_STC_AUTOCOMP_CHAR_DELETED, ..
					wxEVT_STC_HOTSPOT_RELEASE_CLICK
				Return bmx_wxscintilla_geteventtype(eventType)
		End Select
	End Method
		
End Type

New TScintillaEventFactory

